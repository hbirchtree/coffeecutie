///////////
//Here we put out global variables. This is easier than scouting for them in a large script.
///////////
var objStack = new Array(); //Here we store some objects to avoid them being destroyed.

var initData = importVariantMap("ubw.json");
var assets = factory.importAssets(coffeeroot,initData,"ubw.json");

#inc "data/load_data.qts"

//Load up the world
coffeeroot.evloop.world = _load_object_world(initData["world.world1"],coffeeroot,assets);

//Some global variables for simplicity
var world = coffeeroot.evloop.world;
var inputClock = new QTimer;
var controller = new CoffeePlayerController;
var surface = coffeeroot.evloop.screenSurface;

world.connectSignals(controller);

world.setRenderer(renderer);
surface.shader = assets.shaders.deferred_display;

world.testparts.transform.feedbackAttributes = ["outType","outPos","outVel","outLife"];
world.testparts2.transform.feedbackAttributes = ["outType","outPos","outVel","outLife"];

//Set up deferred rendering
#inc "display/surface-setup.qts"

#inc "display/renderer-setup.qts"

world.camera.position.bindValue(world.blade.position);
world.lights[0].position.bindValue(world.camera.position);
world.plane.rotation.value = [2,-3,0,0];
world.fogDensity = 0.03;
world.lights[0].attenuation = 0.003;

//Define the shader bindings
#inc "rendering/shader-setup.qts"
//Set up objects for rendering
{
	var objects = [world.gear, world.plane, world.blade];

	for(var i=0;i<objects.length;i++){
		objStandardInitShader(objects[i]);
	}
}

//Set up input and etc.
#inc "input/event-handling.qts"
