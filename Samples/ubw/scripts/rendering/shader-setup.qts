function objStandardInitShader(target){
	var obj = target;
	var mat = obj.material;

	//Material textures
	for(var i=0;i<mat.textureTypes.length;i++){
		var t = mat.textureTypes[i];
		switch(t){
		case CoffeeTexture.CoffeeTexture_Ambient:
			obj.setTexture("mtl.ambientSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Heightmap:
			obj.setTexture("mtl.heightmapSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Emissive:
			obj.setTexture("mtl.emissiveSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Displacement:
			obj.setTexture("mtl.displacementSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Lightmap:
			obj.setTexture("mtl.lightmapSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Reflection:
			obj.setTexture("mtl.reflectivitySampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Diffusion:
			obj.setTexture("mtl.diffuseSampler",mat.getTexture(t));
            break;
		case CoffeeTexture.CoffeeTexture_Bumpmap:
			obj.setTexture("mtl.bumpSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Specular:
			obj.setTexture("mtl.specularSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Highlight:
			obj.setTexture("mtl.highlightSampler",mat.getTexture(t));
			break;
		case CoffeeTexture.CoffeeTexture_Transparency:
            obj.setTexture("mtl.transparencySampler",mat.getTexture(t));
			break;
		default:
			break;
        }
	}

	//Material
	obj.setUniform("mtl.opacity",mat.opacityVariant);
	obj.setUniform("mtl.shininess",mat.shininessVariant);
	obj.setUniform("mtl.shininessStrength",mat.shininessStrengthVariant);
	obj.setUniform("mtl.transparencyValue",mat.transparency);
	obj.setUniform("mtl.colorMultiplier",mat.colorMultiplier);
	obj.setUniform("mtl.specularColor",mat.specularColor);
	obj.setUniform("mtl.ambientColor",mat.ambientColor);
	obj.setUniform("mtl.diffuseColor",mat.diffuseColor);
	obj.setUniform("mtl.emissiveColor",mat.emissiveColor);
	obj.setUniform("mtl.refraction",mat.refractionVariant);
	obj.setUniform("mtl.reflectivity",mat.reflectivityVariant);

	//Camera
	obj.setUniform("cameraVP",world.camera.matrixVP);
	obj.setUniform("camera",world.camera.matrix);
	obj.setUniform("cameraPosition",world.camera.positionVariant);

	//Lights
	obj.setUniform("light.position",world.lights[0].positionVariant);
	obj.setUniform("light.intensities",world.lights[0].colorVariant);
	obj.setUniform("light.attenuation",world.lights[0].attenuationVariant);
	obj.setUniform("light.ambientCoefficient",world.lights[0].ambientCoefficientVariant);

	//Fog
	obj.setUniform("fogParams.fDensity",world.fogDensityVariant);
	obj.setUniform("fogParams.fColor",world.fogColorVariant);

	//Model
	obj.setUniform("model",obj.matrix);
}
