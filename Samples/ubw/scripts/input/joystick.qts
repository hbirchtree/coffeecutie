var cameraThrottle = 1.0;

//Input should only interact with the controller-object
var joy_inputevent = new CoffeePhysicsEvent();
var joy_force = new Vector3Value();
joy_inputevent.targets = [world.blade.physics];

var joy_mover = new Vector3Value();

function axisReact(axe,val,diff){
	switch(axe){
	case 0:{
//		joy_mover.value = [];
//		controller.addSpeedForward(joy_mover);
		break;
	}
	case 1:{

		break;
	}
	case 6:{
		if(val==0){
			return;
		}
		joy_force.value = [val,0,0];
		joy_inputevent.setVector3(CoffeePhysicsEvent.ForceApplication,joy_force);
		world.handlePhysEvent(joy_inputevent);
		break;
	}
	case 7:{
		if(val==0){
			return;
		}
		joy_force.value = [0,0,val];
		joy_inputevent.setVector3(CoffeePhysicsEvent.ForceApplication,joy_force);
		world.handlePhysEvent(joy_inputevent);
		break;
	}
	case 3:{
		if(!((val<0&&diff>0)||(val>0&&diff<0))){
			controller.joystickSetRotationYaw(Math.pow(val,3)*100);
		}
		break;
	}
	case 4:{
		if(!((val<0&&diff>0)||(val>0&&diff<0))){
			controller.joystickSetRotationPitch(Math.pow(val,3)*(-100));
		}
		break;
	}
	case 5:{
		cameraThrottle = 2.0 + val;
		break;
	}
	};
}
function buttonReact(btn){
	switch(btn){
	case 0:{
		c_vec.value = [0,50,0];
		c_target.modifyPhysics(c_moveProp);
//		coffeeroot.evloop.world.wireframeMode = !coffeeroot.evloop.world.wireframeMode;
		break;
	}
	case 7:{
		renderClose();
		break;
	}
	default:{
		print("Joystick button pressed:",btn);
		break;
	}
	}
}

var js1 = renderer.getJoystickDevice(0);

if(js1==null){
	print("No joystick device detected!");
}else{
	print("Joystick attached:",js1.deviceName);
	js1.axisMoved.connect(axisReact);
	js1.buttonPressed.connect(buttonReact);
}
