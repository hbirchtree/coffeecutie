function kbdReact(type, key, mods){
	switch(key){
			case Qt.Key_Escape:{
				renderClose();
				break;
			}
//			case Qt.Key_J:{
//				renderer.jsdev.enabled = !renderer.jsdev.enabled;
//				break;
//			}
//			case Qt.Key_W:{
//				controller.addSpeedForward(world.camera.forward,[6,6,6]);
//				break;
//			}
//			case Qt.Key_A:{
//				controller.addSpeedRight(world.camera.right,[-6,-6,-6]);
//				break;
//			}
//			case Qt.Key_S:{
//				controller.addSpeedForward(world.camera.forward,[-6,-6,-6]);
//				break;
//			}
//			case Qt.Key_D:{
//				controller.addSpeedRight(world.camera.right,[6,6,6]);
//				break;
//			}
	}
}

function mouseButtonReact(pressed,button,mods){
	print(pressed,button);
	if(pressed){
		if(button==1&&!renderer.mouseGrabbing){
			renderer.mouseGrabbing = true;
		}else if(button==3&&renderer.mouseGrabbing){
			renderer.mouseGrabbing = false;
		}
	}
}
function mouseMoveReact(x,y){
	//Temporary issue: Mouse grabbing bool is negated?
	if(renderer.mouseGrabbing){
		print(x,y);
		renderer.setMousePosition(0,0);
		controller.mouseSetRotation(x,y);
	}
}

input.keyboardKey.connect(kbdReact);
input.mouseMove.connect(mouseMoveReact);
input.mouseButton.connect(mouseButtonReact);
