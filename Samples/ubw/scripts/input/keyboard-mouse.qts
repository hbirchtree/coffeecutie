function inputReact(event){
	switch(event.type){
	case CoffeeInputEvent.Mouse:{
		if(renderer.mouseGrabbing){
			renderer.setMousePosition(0,0);
			controller.mouseSetRotation(event.pos.x,event.pos.y);
		}
		if(event.qtype==QEvent.MouseButtonPress){
			if(event.mouseButtons&Qt.LeftButton){
				renderer.mouseGrabbing = true;
			}else if(event.mouseButtons&Qt.RightButton){
				renderer.mouseGrabbing = false;
			}
		}
		break;
	}
	case CoffeeInputEvent.Keyboard:{
		if(event.qtype==QEvent.KeyPress){
			switch(event.key){
			case Qt.Key_J:{
				renderer.jsdev.enabled = !renderer.jsdev.enabled;
				break;
			}
			case Qt.Key_W:{
				controller.addSpeedForward(world.camera.forward,[6,6,6]);
				break;
			}
			case Qt.Key_A:{
				controller.addSpeedRight(world.camera.right,[-6,-6,-6]);
				break;
			}
			case Qt.Key_S:{
				controller.addSpeedForward(world.camera.forward,[-6,-6,-6]);
				break;
			}
			case Qt.Key_D:{
				controller.addSpeedRight(world.camera.right,[6,6,6]);
				break;
			}
			}
		} else if(event.qtype == QEvent.KeyRelease){
			switch(event.key){
			case Qt.Key_Escape:{
				renderClose();
				break;
			}
			}
		}
		break;
	}
	}
	event.accept();
}
//renderer.inputEvent.connect(inputReact);
