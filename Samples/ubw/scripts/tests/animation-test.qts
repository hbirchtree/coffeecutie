
//Testing instanced rendering + animating these

function addNewGear(mass,shape){
	var scl = new ScalarValue();
	var v3 = new Vector3Value();
	//Create instance, create physics-object, bind them and see what happens.
	var i = world.gear.mesh.instances.instanceObjects.length;
	world.gear.mesh.instances.createInstance();
	var pobj = new PhysicsObject(coffeeroot);
	var desc = new CoffeePhysicsEvent(pobj);

	desc.targets = [pobj];
	desc.intent = CoffeePhysicsEvent.CreateIntent;

	desc.setInt(CoffeePhysicsEvent.ShapeProperty,CoffeePhysicsEvent.BoxShape);

	scl.value = mass;
	desc.setScalar(CoffeePhysicsEvent.MassProperty,scl);

	v3.value = [1,1,0.5];
	desc.setVector3(CoffeePhysicsEvent.ScaleProperty,v3);

	v3.value = [5,20,-5];
	desc.setVector3(CoffeePhysicsEvent.PositionProperty,v3);

	desc.dispose = true;

	world.handlePhysEvent(desc);

	world.gear.mesh.instances.instanceObjects[i].bindObject(pobj);
}

{
	var gear = world.gear.mesh;
	gear.useInstancing = true;
	gear.instances.createInstance();
	gear.instances.createInstance();
	gear.instances.createInstance();

	function modifyGear(index,size, pos){
		gear.instances.instanceObjects[index].scale.value = [size,size,size];
		gear.instances.instanceObjects[index].position.value = pos;
	}

	modifyGear(0,60,[100,100,100]);
	modifyGear(1,40,[10,166,100]);
}
function rotateGears(){
	world.gear.mesh.instances.instanceObjects[1].rotation.mathCumulate([1,0,0,0.001]);
	world.gear.mesh.instances.instanceObjects[0].rotation.mathCumulate([1,0,0,-0.001]);
}

var anim = new QTimer;
anim.interval = 5;
anim.timeout.connect(rotateGears);
anim.start();

function createGrassGrid(sz){
	print("Creating grass grid:",Math.pow(sz,2));
	var grass = world.grass.mesh;
	for(var i=0;i<Math.pow(sz,2);i++){
		grass.instances.createInstance();
		grass.instances.instanceObjects[i].scale.value = [1,1,1];
		var x = Math.floor(i/sz);
		var y = i-x*sz;
		grass.instances.instanceObjects[i].position.value = [x,0,y];
	}
	grass.useInstancing = true;
	print("Grass grid created");
}
createGrassGrid(10);
