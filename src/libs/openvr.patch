diff --git a/headers/openvr.h b/headers/openvr.h
index f79a25e..02cc83a 100644
--- a/headers/openvr.h
+++ b/headers/openvr.h
@@ -867,7 +867,7 @@ enum EVRInitError
 #define VR_INTERFACE extern "C" __declspec( dllimport )
 #endif
 
-#elif defined(GNUC) || defined(COMPILER_GCC) || defined(__APPLE__)
+#elif defined(__GNUC__) || defined(COMPILER_GCC) || defined(__APPLE__)
 
 #ifdef VR_API_EXPORT
 #define VR_INTERFACE extern "C" __attribute__((visibility("default")))
diff --git a/headers/openvr_driver.h b/headers/openvr_driver.h
index ea7f8d1..f40b08a 100644
--- a/headers/openvr_driver.h
+++ b/headers/openvr_driver.h
@@ -867,7 +867,7 @@ enum EVRInitError
 #define VR_INTERFACE extern "C" __declspec( dllimport )
 #endif
 
-#elif defined(GNUC) || defined(COMPILER_GCC) || defined(__APPLE__)
+#elif defined(__GNUC__) || defined(COMPILER_GCC) || defined(__APPLE__)
 
 #ifdef VR_API_EXPORT
 #define VR_INTERFACE extern "C" __attribute__((visibility("default")))
diff --git a/samples/shared/pathtools.cpp b/samples/shared/pathtools.cpp
index d148a5d..26760da 100644
--- a/samples/shared/pathtools.cpp
+++ b/samples/shared/pathtools.cpp
@@ -3,6 +3,13 @@
 //#include "hmdplatform_private.h"
 //#include "vrcommon/strtools.h"
 
+#include <coffee/core/plat/plat_primary_identify.h>
+
+#if defined(COFFEE_LINUX)
+#define LINUX
+#endif
+
+
 #if defined( _WIN32)
 #include <Windows.h>
 #include <direct.h>
@@ -15,8 +22,25 @@
 #define _S_IFDIR S_IFDIR     // really from tier0/platform.h which we dont have yet
 #define _MAX_PATH MAX_PATH   // yet another form of _PATH define we use
 #elif defined(LINUX)
+#include <unistd.h>
 #include <dlfcn.h>
 #include <stdio.h>
+#include <strings.h>
+#define stricmp strcasecmp
+#define errno_t error_t
+
+#include <assert.h>
+
+errno_t fopen_s(FILE **f, const char *name, const char *mode) {
+    errno_t ret = 0;
+    assert(f);
+    *f = fopen(name, mode);
+    /* Can't be sure about 1-to-1 mapping of errno and MS' errno_t */
+    if (!*f)
+        ret = errno;
+    return ret;
+}
+
 #endif
 
 #include <sys/stat.h>
@@ -47,7 +71,7 @@ std::string Path_GetExecutablePath()
 		rchPath[ 0 ] = '\0';
 	}
 #else
-	AssertMsg( false, "Implement Plat_GetExecutablePath" );
+    AssertMsg( false, "Implement Plat_GetExecutablePath" );
 #endif
 
 	if( bSuccess )
@@ -557,4 +581,4 @@ bool Path_WriteStringToTextFile( const std::string &strFilename, const char *pch
 	}
 
 	return ok;
-}
\ No newline at end of file
+}
