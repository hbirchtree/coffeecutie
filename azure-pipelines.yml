trigger:
  paths:
    include:
    - examples/*
    - src/*
    - tests/*
    - toolchain/*
  branches:
    include:
    - master
    - /^testing.*$/
    - /^feature.*$/
jobs:
- job: Linux
  pool:
    vmImage: ubuntu-18.04
  strategy:
    matrix:
      android.armv7a.v19:
        variant: android.armv7a.v19
      android.armv7a.v21:
        variant: android.armv7a.v21
      android.armv7a.v27:
        variant: android.armv7a.v27
      android.armv8a.v27:
        variant: android.armv8a.v27
      android.armv8a.v29:
        variant: android.armv8a.v29
      beaglebone.black:
        variant: beaglebone.black
      emscripten.wasm:
        variant: emscripten.wasm
      fedora.amd64:
        variant: fedora.amd64
      gamecube:
        variant: gamecube
      raspberry.armhf:
        variant: raspberry.armhf
      testing.linux.lowfat.debug:
        variant: testing.linux.lowfat.debug
      testing.linux.lowfat.release:
        variant: testing.linux.lowfat.release
      testing.linux.release:
        variant: testing.linux.release
      ubuntu.amd64:
        variant: ubuntu.amd64
  steps:
  - checkout: self
    submodules: true
  - script: ./toolchain/ci/travis-deps.sh
    displayName: Downloading dependencies
    env:
      TRAVIS_OS_NAME: linux
      PIPELINES: '1'
  - script: ./toolchain/ci/travis-build.sh
    displayName: Building project
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      TRAVIS_COMMIT: $(Build.SourceVersion)
      TRAVIS_REPO_SLUG: $(Build.Repository.Name)
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: linux
  - script: ./toolchain/ci/travis-deploy.sh
    displayName: Deploying artifacts
    continueOnError: true
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      TRAVIS_COMMIT: $(Build.SourceVersion)
      TRAVIS_REPO_SLUG: $(Build.Repository.Name)
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: linux
- job: macOS_and_iOS
  pool:
    vmImage: macos-10.14
  strategy:
    matrix:
      ios.x86_64:
        variant: ios.x86_64
      osx:
        variant: osx
  steps:
  - checkout: self
    submodules: true
  - script: ./toolchain/ci/travis-deps.sh
    displayName: Downloading dependencies
    env:
      TRAVIS_OS_NAME: osx
      PIPELINES: '1'
  - script: ./toolchain/ci/travis-build.sh
    displayName: Building project
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      TRAVIS_COMMIT: $(Build.SourceVersion)
      TRAVIS_REPO_SLUG: $(Build.Repository.Name)
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: osx
  - script: ./toolchain/ci/travis-deploy.sh
    displayName: Deploying artifacts
    continueOnError: true
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      TRAVIS_COMMIT: $(Build.SourceVersion)
      TRAVIS_REPO_SLUG: $(Build.Repository.Name)
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: osx
- job: Windows
  pool:
    vmImage: windows-2019
  strategy:
    matrix:
      uwp.amd64.vs19:
        variant: uwp.amd64.vs19
      win32.amd64.vs19:
        variant: win32.amd64.vs19
  steps:
  - checkout: self
    submodules: true
  - powershell: ./toolchain/ci/appveyor-deps.ps1
    displayName: Downloading dependencies
    env:
      AZURE_IMAGE: vs2019-win2019
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
  - powershell: ./toolchain/ci/appveyor-build.ps1
    displayName: Configuring project
    env:
      AZURE_IMAGE: vs2019-win2019
      VSVERSION: '2019'
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: $(Build.SourcesDirectory)
      BUILD_DIR: $(Build.SourcesDirectory)/build
      APPVEYOR_BUILD_FOLDER: $(Build.SourcesDirectory)/build
      APPVEYOR_REPO_NAME: $(Build.Repository.Name)
      APPVEYOR_REPO_COMMIT: $(Build.SourceVersion)
      BUILDVARIANT: $(variant)
      CONFIGURATION: Debug
      PATH: $(Path);C:/Program Files/NASM
  - powershell: '& cmake.exe --build $env:BUILD_DIR --target install --config $env:CONFIGURATION'
    displayName: Building project
    env:
      AZURE_IMAGE: vs2019-win2019
      VSVERSION: '2019'
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: $(Build.SourcesDirectory)
      BUILD_DIR: $(Build.SourcesDirectory)/build
      APPVEYOR_BUILD_FOLDER: $(Build.SourcesDirectory)/build
      APPVEYOR_REPO_NAME: $(Build.Repository.Name)
      APPVEYOR_REPO_COMMIT: $(Build.SourceVersion)
      BUILDVARIANT: $(variant)
      CONFIGURATION: Debug
      PATH: $(Path);C:/Program Files/NASM
  - powershell: ./toolchain/ci/appveyor-deploy.ps1
    displayName: Deploying artifacts
    continueOnError: true
    env:
      AZURE_IMAGE: vs2019-win2019
      VSVERSION: '2019'
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: $(Build.SourcesDirectory)
      BUILD_DIR: $(Build.SourcesDirectory)/build
      APPVEYOR_BUILD_FOLDER: $(Build.SourcesDirectory)/build
      APPVEYOR_REPO_NAME: $(Build.Repository.Name)
      APPVEYOR_REPO_COMMIT: $(Build.SourceVersion)
      BUILDVARIANT: $(variant)
      CONFIGURATION: Debug
      PATH: $(Path);C:/Program Files/NASM
