BUILD_DIR ?= $(PWD)
BUILD_MODE ?= containerized
CONFIGURATION ?= Debug
GENERATE_PROGRAMS ?= OFF
HEADLESS ?= ON
MAKEFILE_DIR ?= $(SOURCE_DIR)
ROOT_DIR ?= $(MAKEFILE_DIR)
SOURCE_DIR ?= $(PWD)/..

ifeq ($(BUILD_MODE), bare)
	ANDROID_NDK_INTERNAL := $(ANDROID_NDK)
	ANDROID_SDK_INTERNAL := $(ANDROID_SDK)
	CMAKE_BUILD_DIR := $(BUILD_DIR)
	CMAKE_INSTALL_DIR := $(BUILD_DIR)/build
	CMAKE_SOURCE_DIR := $(SOURCE_DIR)
	COFFEE_ROOT_DIR := $(COFFEE_DIR)
	NATIVE_LIBRARY_DIR := $(BUILD_DIR)/dependencies/native-libs
	RUNNER := Makefile.workspace
endif


ifeq ($(BUILD_MODE), containerized)
	ANDROID_NDK_INTERNAL := /home/coffee/android-ndk-linux
	ANDROID_SDK_INTERNAL := /home/coffee/android-sdk-linux
	CMAKE_BUILD_DIR := /home/coffee/build
	CMAKE_INSTALL_DIR := /home/coffee/out
	CMAKE_SOURCE_DIR := /home/coffee/project
	COFFEE_ROOT_DIR := /home/coffee/library
	NATIVE_LIBRARY_DIR := /nativelibs
	RUNNER := Makefile.multi
endif

FORCE:

native-libs:
	mkdir -p $(BUILD_DIR)/dependencies/native-libs
	-git clone --recursive --depth 1 https://github.com/hbirchtree/native-library-bundle.git $(BUILD_DIR)/dependencies/native-libs
	-git pull -C $(BUILD_DIR)/dependencies/native-libs

rpi-sdk:
	mkdir -p $(BUILD_DIR)/dependencies/raspberry-sysroot
	-git clone --recursive --depth 1 https://github.com/hbirchtree/raspberry-sysroot.git $(BUILD_DIR)/dependencies/raspberry-sysroot
	-git pull -C $(BUILD_DIR)/dependencies/raspberry-sysroot

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.gingerbread.gles2: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-9 \
	-DANDROID_ABI='armeabi-v7a with NEON' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.gingerbread.gles2 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.gingerbread.gles2 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv7a.gingerbread.gles2:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv7a.gingerbread.gles2

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.kitkat.gles2: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-19 \
	-DANDROID_ABI='armeabi-v7a with NEON' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.kitkat.gles2 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.kitkat.gles2 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv7a.kitkat.gles2:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv7a.kitkat.gles2

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.lollipop.gles3: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-21 \
	-DANDROID_ABI='armeabi-v7a with NEON' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.lollipop.gles3 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.lollipop.gles3 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=OFF \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv7a.lollipop.gles3:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv7a.lollipop.gles3

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.nougat.gles2: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-24 \
	-DANDROID_ABI='armeabi-v7a with NEON' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.nougat.gles2 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.nougat.gles2 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv7a.nougat.gles2:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv7a.nougat.gles2

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.nougat.gles3: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-24 \
	-DANDROID_ABI='armeabi-v7a with NEON' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.nougat.gles3 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.nougat.gles3 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=OFF \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv7a.nougat.gles3:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv7a.nougat.gles3

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv8a.lollipop.gles3: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-21 \
	-DANDROID_ABI='arm64-v8a' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv8a.lollipop.gles3 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv8a.lollipop.gles3 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=OFF \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv8a.lollipop.gles3:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv8a.lollipop.gles3

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv8a.nougat.gles3: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-24 \
	-DANDROID_ABI='arm64-v8a' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv8a.nougat.gles3 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv8a.nougat.gles3 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=OFF \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.armv8a.nougat.gles3:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.armv8a.nougat.gles3

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.mips.kitkat: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-19 \
	-DANDROID_ABI='mips' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.mips.kitkat \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.mips.kitkat \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.mips.kitkat:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.mips.kitkat

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.mips64.kitkat: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-19 \
	-DANDROID_ABI='mips64' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.mips64.kitkat \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.mips64.kitkat \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.mips64.kitkat:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.mips64.kitkat

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.x86.kitkat: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-19 \
	-DANDROID_ABI='x86' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.x86.kitkat \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.x86.kitkat \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.x86.kitkat:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.x86.kitkat

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.x86_64.kitkat: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/nothing.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/all-android.toolchain.cmake \
	-DANDROID_NDK=$(ANDROID_NDK_INTERNAL) \
	-DANDROID_SDK=$(ANDROID_SDK_INTERNAL) \
	-DANDROID_TOOLCHAIN=clang \
	-DANDROID_STL=c++_static \
	-DANDROID_PLATFORM=android-19 \
	-DANDROID_ABI='x86_64' \
	-DANDROID_CPP_FEATURES=rtti\;exceptions \
	-DANDROID_ARM_NEON=OFF \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.x86_64.kitkat \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.x86_64.kitkat \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_GLES=ON \
	-DBUILD_GLES_20=ON \
	-DBUILD_TESTS=OFF \
	-DBUILD_SDL2=OFF \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/android.x86_64.kitkat:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=android \
	-e CMAKE_SECOND_TARGET=AndroidPackage@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=android.x86_64.kitkat

# Coverage build using same config as Ubuntu
# Compiler: Clang
coverage: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-coverage.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=Debug \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/coverage \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/coverage \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-e CC= \
	-e CXX= \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/coverage:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu \
	-e CMAKE_SECOND_TARGET=CoverageTest@1 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=coverage

# Documentation build using only Doxygen
# Compiler: Doxygen
docs: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/docs-all.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/docs \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/docs \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/docs:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=docs

# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
emscripten.asmjs: FORCE native-libs emscripten
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'Unix Makefiles' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/js-emscripten.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/js-emscripten.toolchain.cmake \
	-DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Emscripten \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/emscripten.asmjs \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/emscripten.asmjs \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/emscripten.asmjs:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=emscripten \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=emscripten.asmjs

# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
emscripten.wasm: FORCE native-libs emscripten
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'Unix Makefiles' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/js-emscripten-wasm.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/js-emscripten.toolchain.cmake \
	-DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Emscripten \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/emscripten.wasm \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/emscripten.wasm \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/emscripten.wasm:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=emscripten \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=emscripten.wasm

# Fedora build in a Fedora Docker
# Compiler: GCC 5+
fedora.amd64: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-fedora.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Fedora \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/fedora.amd64 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/fedora.amd64 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/fedora.amd64:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=fedora \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=fedora.amd64

# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
maemo.armel: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi.make8 \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'Unix Makefiles' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-maemo.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-maemo-armv7_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Maemo \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=Release \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/maemo.armel \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/maemo.armel \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
	-e DOCKER_EXTRA_OPTIONS=" \
	-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro \
	-v $(COFFEE_DIR):/maemo//home/coffee/library:ro \
	-v $(SOURCE_DIR):/maemo//home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw \
	-v $(BUILD_DIR)/maemo.armel:/maemo//home/coffee/build:rw \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/maemo.armel:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONTAINER=hbirch/maemo-builder:v3 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=maemo.armel

# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
mingw.w64: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/windows-mingw64.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/windows-mingw64_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/MinGW \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/mingw.w64 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/mingw.w64 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/mingw.w64:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=mingw64 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=mingw.w64

# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
raspberry.armhf: FORCE native-libs rpi-sdk
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-raspberry.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-raspberry-armhf_linux.toolchain.cmake \
	-DRASPBERRY_SDK=/rpi-sysroot \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/RaspberryPi \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/raspberry.armhf \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/raspberry.armhf \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/raspberry.armhf:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=raspberry \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=raspberry.armhf

# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
steam.amd64: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-steam.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-steam_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/SteamOS \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/steam.amd64 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/steam.amd64 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/steam.amd64:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=steam \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=steam.amd64

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-generic.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DMKSQUASH_PROGRAM=/usr/bin/mksquashfs \
	-DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime \
	-DGENERATE_APPIMAGE=ON \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/ubuntu.amd64:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=ubuntu.amd64

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64.tools: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-generic.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64.tools \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64.tools \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DMKSQUASH_PROGRAM=/usr/bin/mksquashfs \
	-DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime \
	-DGENERATE_APPIMAGE=ON \
	-DBUILD_UTILITIES=ON \
	-DBUILD_EXAMPLES=OFF \
	-DBUILD_TESTS=OFF \
	-DGENERATE_FLATPAK=OFF \
	-DGENERATE_SNAPPY=OFF \
	-DGENERATE_APPIMAGE=ON \
	-DBUILD_ETC2COMP=ON \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/ubuntu.amd64.tools:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=ubuntu.amd64.tools

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64.gles2: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-gles.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64.gles2 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64.gles2 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DMKSQUASH_PROGRAM=/usr/bin/mksquashfs \
	-DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime \
	-DGENERATE_APPIMAGE=ON \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/ubuntu.amd64.gles2:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=ubuntu.amd64.gles2

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64.gles3: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-gles.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64.gles3 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64.gles3 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DMKSQUASH_PROGRAM=/usr/bin/mksquashfs \
	-DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime \
	-DGENERATE_APPIMAGE=ON \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/ubuntu.amd64.gles3:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=ubuntu.amd64.gles3

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.i686.gles: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-gles.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic-i686_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.i686.gles \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.i686.gles \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/ubuntu.i686.gles:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu-i686 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=ubuntu.i686.gles

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.i686.gles2: FORCE native-libs
	make -f $(ROOT_DIR)/$(RUNNER) multi \
	-e EXTRA_OPTIONS=" \
	$(CMAKE_SOURCE_DIR) \
	-G'CodeBlocks - Ninja' \
	-C$(CMAKE_SOURCE_DIR)/toolchain/cmake/Preload/linux-gles.cmake \
	-DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/toolchain/cmake/Toolchains/linux-generic-i686_linux.toolchain.cmake \
	-DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu \
	-DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) \
	-DCMAKE_BUILD_TYPE=$(CONFIGURATION) \
	-DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.i686.gles2 \
	-DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.i686.gles2 \
	-DBUILD_BINARIES=$(GENERATE_PROGRAMS) \
	-DSKIP_GRAPHIC_TESTS=$(HEADLESS) \
	-DBUILD_ASSIMP=ON" \
	-e DOCKER_EXTRA_OPTIONS=" \
	 \
	-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro \
	-v $(SOURCE_DIR):/home/coffee/project:ro \
	-v $(BUILD_DIR)/build:/home/coffee/out:rw \
	-v $(BUILD_DIR)/ubuntu.i686.gles2:/home/coffee/build:rw \
	-v $(COFFEE_DIR):/home/coffee/library:ro \
	--workdir \"$(CMAKE_BUILD_DIR)\"" \
	-e DOCKER_CONFIG=ubuntu-i686 \
	-e CMAKE_BUILD_DIR=$(CMAKE_BUILD_DIR) \
	-e OUTPUT_DIR=$(BUILD_DIR) \
	-e BUILD_NAME=ubuntu.i686.gles2

