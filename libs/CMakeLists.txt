cmake_minimum_required(VERSION 3.2)

option (COFFEE_BUILD_STATIC "Build libraries statically" OFF)

include(ExternalProject)

if(COFFEE_BUILD_STATIC)
set(GLBINDING_CFG_FLAGS
				"-DOPTION_PORTABLE_INSTALL=ON"
				"-DCMAKE_BUILD_TYPE=Release"
				"-DOPTION_BUILD_STATIC=ON"
				"-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}"
		)
set(ASSIMP_CFG_FLAGS
				"-DASSIMP_BUILD_TESTS=OFF"
				"-DCMAKE_BUILD_TYPE=Release"
				"-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}"
				"-DBUILD_SHARED_LIBS=OFF"
		)
else()
set(GLBINDING_CFG_FLAGS
				"-DOPTION_PORTABLE_INSTALL=ON"
				"-DCMAKE_BUILD_TYPE=Release"
				"-DOPTION_BUILD_STATIC=OFF"
				"-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}"
		)
set(ASSIMP_CFG_FLAGS
				"-DASSIMP_BUILD_TESTS=OFF"
				"-DCMAKE_BUILD_TYPE=Release"
				"-DBUILD_SHARED_LIBS=ON"
				"-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}"
		)
endif()

ExternalProject_Add(GLbinding
SOURCE_DIR ${CMAKE_SOURCE_DIR}/glbinding/
BINARY_DIR ${CMAKE_BINARY_DIR}/build_libs/glbinding/

CMAKE_ARGS ${GLBINDING_CFG_FLAGS}
		)


ExternalProject_Add(Assimp
SOURCE_DIR ${CMAKE_SOURCE_DIR}/assimp/
PREFIX ${CMAKE_BINARY_DIR}/build_libs/assimp/
INSTALL_DIR ${CMAKE_BINARY_DIR}

CMAKE_ARGS ${ASSIMP_CFG_FLAGS}
		)

