name: CMake Build
'on':
  push:
    branches:
    - master
    - testing
    - feature**
    tags: '*'
jobs:
  Release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Printing some info
      run: echo "Received ref $GITHUB_REF"
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      run: gh release create ${GITHUB_REF:10} -R ${{ github.repository }} -p -t "Automatic
        Release ${GITHUB_REF:10}" -n "Automatically generated by Actions" --target
        ${{ github.sha }}
  Linux:
    runs-on: ubuntu-latest
    needs: Release
    strategy:
      fail-fast: false
      matrix:
        include:
        - variant: android:arm64:30-gl
          artifact: android-arm64-30-gl
        - variant: android:arm64:32
          artifact: android-arm64-32
        - variant: beaglebone:arm-buildroot-linux-gnueabihf:ti-sgx
          artifact: beaglebone-arm-buildroot-linux-gnueabihf-ti-sgx
        - variant: desktop:aarch64-buildroot-linux-gnu:multi
          artifact: desktop-aarch64-buildroot-linux-gnu-multi
        - variant: desktop:arm-buildroot-linux-gnueabihf:sdl2
          artifact: desktop-arm-buildroot-linux-gnueabihf-sdl2
        - variant: desktop:x86_64-buildroot-linux-gnu:multi
          artifact: desktop-x86_64-buildroot-linux-gnu-multi
        - variant: desktop:x86_64-w64-mingw32:posix
          artifact: desktop-x86_64-w64-mingw32-posix
        - variant: web:wasm32-emscripten:webgl2
          artifact: web-wasm32-emscripten-webgl2
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: lukka/get-cmake@latest
    - uses: actions/checkout@v4
      with:
        submodules: true
        path: source
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
    - uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: Installing build-essential
      run: sudo apt install build-essential inkscape flatpak nasm squashfs-tools
    - name: Host tools cache
      uses: actions/cache@v4
      with:
        path: source/multi_build/host-x64-linux-native
        key: host-tools-${{ runner.os }}-${{ hashFiles('source/tools') }}
    - name: Emscripten SDK cache
      if: matrix.variant == 'web:wasm32-emscripten:webgl2'
      uses: actions/cache@v4
      with:
        path: source/multi_build/compilers/emsdk
        key: emsdk-${{ runner.os }}-${{ hashFiles('source/toolchain/building.sh') }}
    - name: Building host tools
      run: source/cb host-build
      env:
        VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
    - name: Building project
      run: source/cb build ${{matrix.variant}}
      env:
        VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
    - name: Uploading artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{matrix.artifact}}
        path: |
          source/multi_build/${{matrix.artifact}}/bin
          source/multi_build/${{matrix.artifact}}/lib
          !source/multi_build/${{matrix.artifact}}/lib/*.a
          source/multi_build/${{matrix.artifact}}/packaged
        if-no-files-found: error
    - name: Generating GitHub Pages examples
      if: matrix.variant == 'web:wasm32-emscripten:webgl2'
      run: |
        chmod -R 0755 source/multi_build/web-wasm32-emscripten-webgl2/bin
        tar zcvf github-pages.tar.gz source/multi_build/web-wasm32-emscripten-webgl2/bin/
        mkdir -p _site/
        cp -r source/multi_build/web-wasm32-emscripten-webgl2/bin/ _site/
    - name: Uploading GitHub Pages examples
      if: matrix.variant == 'web:wasm32-emscripten:webgl2'
      uses: actions/upload-pages-artifact@v3
  Deploy:
    if: ${{ always() }}
    needs: Linux
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy examples to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
