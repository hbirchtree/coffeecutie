name: CMake Build
'on':
  push:
    branches:
    - master
    - testing
    - feature**
jobs:
  Linux:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        variant:
        - emscripten.wasm
        - fedora.amd64
        - gamecube
        - raspberry.armhf
        - testing.linux.lowfat.debug
        - testing.linux.lowfat.release
        - testing.linux.release
        - ubuntu.amd64
    env:
      CONFIGURATION: Release
      GENERATE_PROGRAMS: 'ON'
      BUILDVARIANT: ${{ matrix.variant }}
      ACTIONS: '1'
      MAKEFILE_DIR: toolchain/makers
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ''
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      TRAVIS_COMMIT: ${{ github.sha }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_OS_NAME: linux
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - name: Select Docker container
      run: sh ${{ github.workspace }}/source/.github/cmake/select/${{ matrix.variant
        }}.sh
    - name: Building project
      run: source/cb docker-build -GNinja
    - name: Compress executables
      run: source/cb compress-usr-dir bin
    - name: Compress libraries
      run: source/cb compress-usr-dir libraries
    - name: Uploading artifacts
      uses: actions/upload-artifact@v2
      with:
        name: '{{matrix.variant}}'
        path: '*.tar.bz2'
  Coverage:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        variant:
        - coverage
    env:
      CONFIGURATION: Release
      GENERATE_PROGRAMS: 'ON'
      BUILDVARIANT: ${{ matrix.variant }}
      ACTIONS: '1'
      MAKEFILE_DIR: toolchain/makers
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ''
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      TRAVIS_COMMIT: ${{ github.sha }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_OS_NAME: linux
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - name: Select Docker container
      run: sh ${{ github.workspace }}/source/.github/cmake/select/${{ matrix.variant
        }}.sh
    - name: Building project
      run: source/cb docker-build -GNinja
    - name: Running tests
      env:
        BUILD_TARGET: CoverageTest
      run: source/cb docker-build -GNinja
    - name: Gathering coverage info
      uses: codecov/codecov-action@v1
  Android:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        variant:
        - android.armv7a.v19
        - android.armv7a.v21
        - android.armv7a.v27
        - android.armv8a.v27
        - android.armv8a.v29
    env:
      CONFIGURATION: Release
      GENERATE_PROGRAMS: 'ON'
      BUILDVARIANT: ${{ matrix.variant }}
      ACTIONS: '1'
      MAKEFILE_DIR: toolchain/makers
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ''
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      TRAVIS_COMMIT: ${{ github.sha }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_OS_NAME: linux
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - name: Select Docker container
      run: echo "::set-env name=CONTAINER::hbirch/android:r21"
    - name: Building project
      run: source/cb docker-build -GNinja
    - name: Compress executables
      run: source/cb compress-usr-dir bin
    - name: Compress libraries
      run: source/cb compress-usr-dir libraries
    - name: Uploading artifacts
      uses: actions/upload-artifact@v2
      with:
        name: '{{matrix.variant}}'
        path: '*.tar.bz2'
  macOS:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
        - ios.x86_64
        - osx
    env:
      CONFIGURATION: Release
      GENERATE_PROGRAMS: 'ON'
      BUILDVARIANT: ${{ matrix.variant }}
      ACTIONS: '1'
      MAKEFILE_DIR: toolchain/makers
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ''
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      TRAVIS_COMMIT: ${{ github.sha }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_OS_NAME: osx
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - name: Installing system dependencies
      run: source/toolchain/ci/travis-deps.sh
    - name: Building project
      run: source/cb ci-build -GXcode
      env:
        BUILD_TARGET: ALL_BUILD
    - name: Compress executables
      run: source/cb compress-usr-dir bin
    - name: Compress libraries
      run: source/cb compress-usr-dir libraries
    - name: Uploading artifacts
      uses: actions/upload-artifact@v2
      with:
        name: '{{matrix.variant}}'
        path: '*.tar.bz2'
  Windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        variant:
        - uwp.amd64.vs19
        - win32.amd64.vs19
    env:
      AZURE_IMAGE: vs2019-win2019
      VSVERSION: '2019'
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      ACTIONS: '1'
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ${{ matrix.variant }}
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      APPVEYOR_BUILD_FOLDER: ${{ github.workspace }}/build
      APPVEYOR_REPO_NAME: ${{ github.repository }}
      APPVEYOR_REPO_COMMIT: ${{ github.sha }}
      BUILDVARIANT: ${{ matrix.variant }}
      GENERATE_PROGRAMS: 'ON'
      CONFIGURATION: Debug
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - run: source/toolchain/ci/appveyor-deps.ps1
      shell: powershell
      name: Downloading dependencies
    - run: echo "::add-path::C:/Program Files/Nasm"
      name: Add Nasm to PATH
    - run: source/toolchain/ci/appveyor-build.ps1
      shell: powershell
      name: Configuring project
    - run: '& cmake.exe --build $env:BUILD_DIR --target install --config $env:CONFIGURATION'
      shell: powershell
      name: Building project
    - run: source/toolchain/ci/appveyor-deploy.ps1
      shell: powershell
      name: Deploying artifacts
      continue-on-error: true
    - name: Uploading artifacts
      uses: actions/upload-artifact@v2
      with:
        name: '{{matrix.variant}}'
        path: build/*.7z
