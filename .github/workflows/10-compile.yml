name: CMake Build
'on':
  push:
    branches:
    - master
    - testing
    - feature**
jobs:
  Linux:
    runs-on: ubuntu-18.04
    fail-fast: false
    strategy:
      matrix:
        variant:
        - android.armv7a.v19
        - android.armv7a.v21
        - android.armv7a.v27
        - android.armv8a.v27
        - android.armv8a.v29
        - emscripten.wasm
        - fedora.amd64
        - gamecube
        - raspberry.armhf
        - testing.linux.lowfat.debug
        - testing.linux.lowfat.release
        - testing.linux.release
        - ubuntu.amd64
    env:
      CONFIGURATION: Release
      GENERATE_PROGRAMS: 'ON'
      BUILDVARIANT: ${{ matrix.variant }}
      ACTIONS: '1'
      MAKEFILE_DIR: toolchain/makers
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ''
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      TRAVIS_COMMIT: ${{ github.sha }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_OS_NAME: linux
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - name: Select Docker container
      run: sh ${{ github.workspace }}/source/.github/cmake/select/${{ matrix.variant
        }}.sh
    - name: Building project
      uses: lukka/run-cmake@v2
      with:
        cmakeListsTxtPath: ${{ github.workspace }}/source/CMakeLists.txt
        buildDirectory: ${{ github.workspace }}/build
        cmakeAppendedArgs: -C${{ github.workspace }}/source/.github/cmake/${{matrix.variant}}.preload.cmake
  Android:
    runs-on: ubuntu-18.04
    fail-fast: false
    strategy:
      matrix:
        variant:
        - android.armv8a.v29
        - android.armv7a.v29
    container:
      image: hbirch/android:r21
      env:
        CONFIGURATION: Release
        GENERATE_PROGRAMS: 'ON'
        BUILDVARIANT: ${{ matrix.variant }}
        ACTIONS: '1'
        MAKEFILE_DIR: toolchain/makers
        SOURCE_DIR: ${{ github.workspace }}/source
        BUILD_DIR: ${{ github.workspace }}/build
        BUILD_REPO_URI: ${{ github.repository }}
        BUILD_REPO_BRANCH: ${{ github.ref }}
        BUILD_REPO_EVENT: push
        BUILD_REPO_ID: ''
        BUILD_REPO_URL: https://github.com/${{ github.repository }}
        TRAVIS_COMMIT: ${{ github.sha }}
        TRAVIS_REPO_SLUG: ${{ github.repository }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRAVIS_OS_NAME: linux
      volumes:
      - ${{github.workspace}}/source:${{github.workspace}}/source
      - ${{github.workspace}}/build:/build
    steps:
    - run: git clone https://${{github.repository}} /source --recursive -j4 --shallow-submodules
        --depth 1 --branch ${{github.sha}}
    - name: Building project
      uses: lukka/run-cmake@v2
      with:
        cmakeListsTxtPath: /source/CMakeLists.txt
        buildDirectory: /build
        cmakeAppendedArgs: -C/source/.github/cmake/${{ matrix.variant }}.preload.cmake
  macOS:
    runs-on: macos-latest
    fail-fast: false
    strategy:
      matrix:
        variant:
        - ios.x86_64
        - osx
    env:
      CONFIGURATION: Release
      GENERATE_PROGRAMS: 'ON'
      BUILDVARIANT: ${{ matrix.variant }}
      ACTIONS: '1'
      MAKEFILE_DIR: toolchain/makers
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ''
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      TRAVIS_COMMIT: ${{ github.sha }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_OS_NAME: osx
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - name: Installing system dependencies
      run: source/toolchain/ci/travis-deps.sh
    - name: Building project
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: ${{ github.workspace }}/source/CMakeLists.txt
        buildDirectory: ${{ github.workspace }}/build
        cmakeAppendedArgs: -GXcode -C${{ github.workspace }}/source/.github/cmake/${{
          matrix.variant }}.preload.cmake
  Windows:
    runs-on: windows-2019
    fail-fast: false
    strategy:
      matrix:
        variant:
        - uwp.amd64.vs19
        - win32.amd64.vs19
    env:
      AZURE_IMAGE: vs2019-win2019
      VSVERSION: '2019'
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      ACTIONS: '1'
      BUILD_REPO_URI: ${{ github.repository }}
      BUILD_REPO_BRANCH: ${{ github.ref }}
      BUILD_REPO_EVENT: push
      BUILD_REPO_ID: ${{ matrix.variant }}
      BUILD_REPO_URL: https://github.com/${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: ${{ github.workspace }}/source
      BUILD_DIR: ${{ github.workspace }}/build
      APPVEYOR_BUILD_FOLDER: ${{ github.workspace }}/build
      APPVEYOR_REPO_NAME: ${{ github.repository }}
      APPVEYOR_REPO_COMMIT: ${{ github.sha }}
      BUILDVARIANT: ${{ matrix.variant }}
      GENERATE_PROGRAMS: 'ON'
      CONFIGURATION: Debug
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        path: source
    - run: source/toolchain/ci/appveyor-deps.ps1
      shell: powershell
      name: Downloading dependencies
    - run: echo "::add-path::C:/Program Files/Nasm"
      name: Add Nasm to PATH
    - run: source/toolchain/ci/appveyor-build.ps1
      shell: powershell
      name: Configuring project
    - run: '& cmake.exe --build $env:BUILD_DIR --target install --config $env:CONFIGURATION'
      shell: powershell
      name: Building project
    - run: source/toolchain/ci/appveyor-deploy.ps1
      shell: powershell
      name: Deploying artifacts
      continue-on-error: true
