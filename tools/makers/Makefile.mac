
#
# Build parameters
#
# BUILD_MODE:
#   - containerized: run build in Docker
#   - bare: run without Docker, no wrappers
# 
# GENERATE_PROGRAMS:
#   - ON: build programs and unit tests
#   - OFF: build only libraries, no unit tests or programs
#
# CMAKE: specify path to CMake executable if necessary.
#     If containerized, use the path inside the container.
#

BUILD_DIR ?= $(PWD)
CMAKE_BUILD_DIR ?= $(BUILD_DIR)
CMAKE_INSTALL_DIR ?= $(BUILD_DIR)/build
CMAKE_SOURCE_DIR ?= $(SOURCE_DIR)
COFFEE_ROOT_DIR ?= $(COFFEE_DIR)
CONFIGURATION ?= Debug
GENERATE_PROGRAMS ?= OFF
GENERATE_TESTS ?= OFF
HEADLESS ?= ON
NATIVE_LIBRARY_DIR ?= $(BUILD_DIR)/dependencies/native-libs
ROOT_DIR ?= $(SOURCE_DIR)/$(MAKEFILE_DIR)
RUNNER ?= Makefile.mac-base
SOURCE_DIR ?= $(PWD)/..

# We use this to always run targets
FORCE:

native-libs.mkdir:
	mkdir -p "$(BUILD_DIR)/dependencies/native-libs"

native-libs: native-libs.mkdir
	[ ! -d $(BUILD_DIR)/dependencies/native-libs/.git ] && \
	git clone 'https://github.com/hbirchtree/native-library-bundle.git' $(BUILD_DIR)/dependencies/native-libs || \
	true


# Create a help option
list-targets:
	@echo "ios\nios.x86\nios.x86_64\nosx"

help: list-targets

list: list-targets


# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
ios: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) build \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Apple -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ios -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DGENERATE_TESTS=$(GENERATE_TESTS) -DCOFFEE_BUILD_ASSIMP=ON -G'Xcode' -C"$(CMAKE_SOURCE_DIR)/cmake/Preload/osx-ios.cmake" -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ios -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e BUILD_NAME="ios" \
		-e TOOLCHAIN="all-ios.toolchain.cmake" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# iOS simulator build
# Compiler: Clang
ios.x86: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) build \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Apple -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ios.x86 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DGENERATE_TESTS=$(GENERATE_TESTS) -DCOFFEE_BUILD_ASSIMP=ON -G'Xcode' -C"$(CMAKE_SOURCE_DIR)/cmake/Preload/osx-ios.cmake" -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ios.x86 -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DIOS_PLATFORM=SIMULATOR" \
		-e BUILD_NAME="ios.x86" \
		-e TOOLCHAIN="all-ios.toolchain.cmake" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# iOS simulator build
# Compiler: Clang
ios.x86_64: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) build \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Apple -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ios.x86_64 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DGENERATE_TESTS=$(GENERATE_TESTS) -DCOFFEE_BUILD_ASSIMP=ON -G'Xcode' -C"$(CMAKE_SOURCE_DIR)/cmake/Preload/osx-ios.cmake" -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ios.x86_64 -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DIOS_PLATFORM=SIMULATOR64" \
		-e BUILD_NAME="ios.x86_64" \
		-e TOOLCHAIN="all-ios.toolchain.cmake" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Apple OS X
# Compiler: Clang
osx: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) build \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Apple -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/osx -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DGENERATE_TESTS=$(GENERATE_TESTS) -DCOFFEE_BUILD_ASSIMP=ON -G'Xcode' -C"$(CMAKE_SOURCE_DIR)/cmake/Preload/osx-generic.cmake" -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/osx -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/osx-generic_osx.toolchain.cmake -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl" \
		-e BUILD_NAME="osx" \
		-e TOOLCHAIN="osx-generic_osx.toolchain.cmake" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

