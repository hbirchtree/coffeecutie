
#
# Build parameters
#
# BUILD_MODE:
#   - containerized: run build in Docker
#   - bare: run without Docker, no wrappers
# 
# GENERATE_PROGRAMS:
#   - ON: build programs and unit tests
#   - OFF: build only libraries, no unit tests or programs
#
# CMAKE: specify path to CMake executable if necessary.
#     If containerized, use the path inside the container.
#

BUILD_DIR ?= $(PWD)
BUILD_MODE ?= containerized
CONFIGURATION ?= Debug
GENERATE_PROGRAMS ?= OFF
HEADLESS ?= ON
ROOT_DIR ?= $(SOURCE_DIR)/$(MAKEFILE_DIR)
SOURCE_DIR ?= $(PWD)/..

ifeq ($(BUILD_MODE), bare)
	ANDROID_NDK_INTERNAL			:= $(ANDROID_NDK)
	ANDROID_SDK_INTERNAL			:= $(ANDROID_SDK)
	CMAKE_BUILD_DIR			:= $(BUILD_DIR)
	CMAKE_INSTALL_DIR			:= $(BUILD_DIR)/build
	CMAKE_SOURCE_DIR			:= $(SOURCE_DIR)
	COFFEE_ROOT_DIR			:= $(COFFEE_DIR)
	NATIVE_LIBRARY_DIR			:= $(BUILD_DIR)/dependencies/native-libs
	RUNNER			:= Makefile.workspace
endif

ifeq ($(BUILD_MODE), containerized)
	ANDROID_NDK_INTERNAL			:= /home/coffee/android-ndk-linux
	ANDROID_SDK_INTERNAL			:= /home/coffee/android-sdk-linux
	CMAKE_BUILD_DIR			:= /home/coffee/build
	CMAKE_INSTALL_DIR			:= /home/coffee/out
	CMAKE_SOURCE_DIR			:= /home/coffee/project
	COFFEE_ROOT_DIR			:= /home/coffee/library
	NATIVE_LIBRARY_DIR			:= /nativelibs
	RUNNER			:= Makefile.multi
endif

# We use this to always run targets
FORCE:

native-libs.mkdir:
	mkdir -p "$(BUILD_DIR)/dependencies/native-libs"

native-libs: native-libs.mkdir
	[ ! -d $(BUILD_DIR)/dependencies/native-libs/.git ] && \
	git clone --depth 1 'https://github.com/hbirchtree/native-library-bundle.git' $(BUILD_DIR)/dependencies/native-libs || \
	true

rpi-sdk.mkdir:
	mkdir -p "$(BUILD_DIR)/dependencies/raspberry-sysroot"

rpi-sdk: rpi-sdk.mkdir
	[ ! -d $(BUILD_DIR)/dependencies/raspberry-sysroot/.git ] && \
	git clone --depth 1 'https://github.com/hbirchtree/raspberry-sysroot.git' $(BUILD_DIR)/dependencies/raspberry-sysroot || \
	true


# Create a help option
list-targets:
	@echo "android.armv7a.gingerbread.gles2\nandroid.armv7a.kitkat.gles2\nandroid.armv7a.lollipop.gles3\nandroid.armv7a.nougat.gles2\nandroid.armv7a.nougat.gles3\nandroid.armv8a.lollipop.gles3\nandroid.armv8a.nougat.gles3\nandroid.mips.kitkat\nandroid.mips64.kitkat\nandroid.x86.kitkat\nandroid.x86_64.kitkat\ncoverage\ndocs\nemscripten.asmjs\nemscripten.wasm\nfedora.amd64\nios\nios.x86\nios.x86_64\nmaemo.armel\nmingw.w64\nosx\nraspberry.armhf\nsteam.amd64\nubuntu.amd64\nubuntu.amd64.gles2\nubuntu.amd64.gles3\nubuntu.amd64.tools\nubuntu.i686.gles\nubuntu.i686.gles2\nappimg-runtime.coverage\nappimg-runtime.fedora.amd64\nappimg-runtime.maemo.armel\nappimg-runtime.raspberry.armhf\nappimg-runtime.ubuntu.amd64\nappimg-runtime.ubuntu.amd64.gles2\nappimg-runtime.ubuntu.amd64.gles3\nappimg-runtime.ubuntu.amd64.tools\nappimg-runtime.ubuntu.i686.gles\nappimg-runtime.ubuntu.i686.gles2\nassimp.android.armv7a.gingerbread.gles2\nassimp.android.armv7a.kitkat.gles2\nassimp.android.armv7a.lollipop.gles3\nassimp.android.armv7a.nougat.gles2\nassimp.android.armv7a.nougat.gles3\nassimp.android.armv8a.lollipop.gles3\nassimp.android.armv8a.nougat.gles3\nassimp.android.mips.kitkat\nassimp.android.mips64.kitkat\nassimp.android.x86.kitkat\nassimp.android.x86_64.kitkat\nassimp.coverage\nassimp.emscripten.asmjs\nassimp.emscripten.wasm\nassimp.fedora.amd64\nassimp.ios\nassimp.ios.x86\nassimp.ios.x86_64\nassimp.maemo.armel\nassimp.mingw.w64\nassimp.osx\nassimp.raspberry.armhf\nassimp.steam.amd64\nassimp.ubuntu.amd64\nassimp.ubuntu.amd64.gles2\nassimp.ubuntu.amd64.gles3\nassimp.ubuntu.amd64.tools\nassimp.ubuntu.i686.gles\nassimp.ubuntu.i686.gles2\nbullet.android.armv7a.gingerbread.gles2\nbullet.android.armv7a.kitkat.gles2\nbullet.android.armv7a.lollipop.gles3\nbullet.android.armv7a.nougat.gles2\nbullet.android.armv7a.nougat.gles3\nbullet.android.armv8a.lollipop.gles3\nbullet.android.armv8a.nougat.gles3\nbullet.android.mips.kitkat\nbullet.android.mips64.kitkat\nbullet.android.x86.kitkat\nbullet.android.x86_64.kitkat\nbullet.coverage\nbullet.emscripten.asmjs\nbullet.emscripten.wasm\nbullet.fedora.amd64\nbullet.ios\nbullet.ios.x86\nbullet.ios.x86_64\nbullet.maemo.armel\nbullet.mingw.w64\nbullet.osx\nbullet.raspberry.armhf\nbullet.steam.amd64\nbullet.ubuntu.amd64\nbullet.ubuntu.amd64.gles2\nbullet.ubuntu.amd64.gles3\nbullet.ubuntu.amd64.tools\nbullet.ubuntu.i686.gles\nbullet.ubuntu.i686.gles2\nglslang.osx\nglslang.ubuntu.amd64\nglslang.ubuntu.amd64.gles2\nglslang.ubuntu.amd64.gles3\nglslang.ubuntu.amd64.tools\nglslang.ubuntu.i686.gles\nglslang.ubuntu.i686.gles2\nopenal.android.armv7a.gingerbread.gles2\nopenal.android.armv7a.kitkat.gles2\nopenal.android.armv7a.lollipop.gles3\nopenal.android.armv7a.nougat.gles2\nopenal.android.armv7a.nougat.gles3\nopenal.android.armv8a.lollipop.gles3\nopenal.android.armv8a.nougat.gles3\nopenal.android.mips.kitkat\nopenal.android.mips64.kitkat\nopenal.android.x86.kitkat\nopenal.android.x86_64.kitkat\nopenal.coverage\nopenal.emscripten.asmjs\nopenal.emscripten.wasm\nopenal.fedora.amd64\nopenal.ios\nopenal.ios.x86\nopenal.ios.x86_64\nopenal.maemo.armel\nopenal.mingw.w64\nopenal.osx\nopenal.raspberry.armhf\nopenal.steam.amd64\nopenal.ubuntu.amd64\nopenal.ubuntu.amd64.gles2\nopenal.ubuntu.amd64.gles3\nopenal.ubuntu.amd64.tools\nopenal.ubuntu.i686.gles\nopenal.ubuntu.i686.gles2\nopenssl.android.armv7a.gingerbread.gles2\nopenssl.android.armv7a.kitkat.gles2\nopenssl.android.armv7a.lollipop.gles3\nopenssl.android.armv7a.nougat.gles2\nopenssl.android.armv7a.nougat.gles3\nopenssl.android.armv8a.lollipop.gles3\nopenssl.android.armv8a.nougat.gles3\nopenssl.android.mips.kitkat\nopenssl.android.mips64.kitkat\nopenssl.android.x86.kitkat\nopenssl.android.x86_64.kitkat\nopenssl.coverage\nopenssl.emscripten.asmjs\nopenssl.emscripten.wasm\nopenssl.fedora.amd64\nopenssl.ios\nopenssl.ios.x86\nopenssl.ios.x86_64\nopenssl.maemo.armel\nopenssl.mingw.w64\nopenssl.osx\nopenssl.raspberry.armhf\nopenssl.steam.amd64\nopenssl.ubuntu.amd64\nopenssl.ubuntu.amd64.gles2\nopenssl.ubuntu.amd64.gles3\nopenssl.ubuntu.amd64.tools\nopenssl.ubuntu.i686.gles\nopenssl.ubuntu.i686.gles2\nsdl2.android.armv7a.gingerbread.gles2\nsdl2.android.armv7a.kitkat.gles2\nsdl2.android.armv7a.lollipop.gles3\nsdl2.android.armv7a.nougat.gles2\nsdl2.android.armv7a.nougat.gles3\nsdl2.android.armv8a.lollipop.gles3\nsdl2.android.armv8a.nougat.gles3\nsdl2.android.mips.kitkat\nsdl2.android.mips64.kitkat\nsdl2.android.x86.kitkat\nsdl2.android.x86_64.kitkat\nsdl2.coverage\nsdl2.emscripten.asmjs\nsdl2.emscripten.wasm\nsdl2.fedora.amd64\nsdl2.ios\nsdl2.ios.x86\nsdl2.ios.x86_64\nsdl2.maemo.armel\nsdl2.mingw.w64\nsdl2.osx\nsdl2.raspberry.armhf\nsdl2.steam.amd64\nsdl2.ubuntu.amd64\nsdl2.ubuntu.amd64.gles2\nsdl2.ubuntu.amd64.gles3\nsdl2.ubuntu.amd64.tools\nsdl2.ubuntu.i686.gles\nsdl2.ubuntu.i686.gles2\nsquish.osx\nsquish.ubuntu.amd64\nsquish.ubuntu.amd64.gles2\nsquish.ubuntu.amd64.gles3\nsquish.ubuntu.amd64.tools\nsquish.ubuntu.i686.gles\nsquish.ubuntu.i686.gles2\nstrip.android.armv7a.gingerbread.gles2\nstrip.android.armv7a.kitkat.gles2\nstrip.android.armv7a.lollipop.gles3\nstrip.android.armv7a.nougat.gles2\nstrip.android.armv7a.nougat.gles3\nstrip.android.armv8a.lollipop.gles3\nstrip.android.armv8a.nougat.gles3\nstrip.android.mips.kitkat\nstrip.android.mips64.kitkat\nstrip.android.x86.kitkat\nstrip.android.x86_64.kitkat\nstrip.coverage\nstrip.emscripten.asmjs\nstrip.emscripten.wasm\nstrip.fedora.amd64\nstrip.ios\nstrip.ios.x86\nstrip.ios.x86_64\nstrip.maemo.armel\nstrip.mingw.w64\nstrip.osx\nstrip.raspberry.armhf\nstrip.steam.amd64\nstrip.ubuntu.amd64\nstrip.ubuntu.amd64.gles2\nstrip.ubuntu.amd64.gles3\nstrip.ubuntu.amd64.tools\nstrip.ubuntu.i686.gles\nstrip.ubuntu.i686.gles2"

help: list-targets

list: list-targets


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.gingerbread.gles2: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-9 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.gingerbread.gles2 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.gingerbread.gles2 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.kitkat.gles2: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.kitkat.gles2 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.kitkat.gles2 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.lollipop.gles3: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.lollipop.gles3 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.lollipop.gles3 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=OFF -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.nougat.gles2: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.nougat.gles2 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.nougat.gles2 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv7a.nougat.gles3: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv7a.nougat.gles3 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv7a.nougat.gles3 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=OFF -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv8a.lollipop.gles3: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv8a.lollipop.gles3 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv8a.lollipop.gles3 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=OFF -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.armv8a.nougat.gles3: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.armv8a.nougat.gles3 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.armv8a.nougat.gles3 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=OFF -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.mips.kitkat: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.mips.kitkat -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.mips.kitkat -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.mips.kitkat:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.mips64.kitkat: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.mips64.kitkat -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.mips64.kitkat -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.mips64.kitkat:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.x86.kitkat: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.x86.kitkat -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.x86.kitkat -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.x86.kitkat:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
android.x86_64.kitkat: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86_64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Android -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/android.x86_64.kitkat -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/android.x86_64.kitkat -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_GLES=ON -DCOFFEE_BUILD_GLES_20=ON -DCOFFEE_BUILD_ASSIMP=ON -DCOFFEE_TESTS=OFF -DCOFFEE_BUILD_SDL2=OFF -DGENERATE_TESTS=OFF" \
		-e CMAKE_SECOND_TARGET="AndroidPackage" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/android.x86_64.kitkat:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Coverage build using same config as Ubuntu
# Compiler: Clang
coverage: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.twostage \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-coverage.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/coverage -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/coverage -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e CMAKE_SECOND_TARGET="CoverageTest" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/coverage:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="coverage" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Documentation build using only Doxygen
# Compiler: Doxygen
docs: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/docs-all.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/docs -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/docs -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/docs:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="docs" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
emscripten.asmjs: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Unix Makefiles' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/js-emscripten.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Emscripten -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/emscripten.asmjs -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/emscripten.asmjs -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/emscripten.asmjs:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
emscripten.wasm: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Unix Makefiles' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/js-emscripten-wasm.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Emscripten -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/emscripten.wasm -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/emscripten.wasm -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/emscripten.wasm:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="emscripten.wasm" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Fedora build in a Fedora Docker
# Compiler: GCC 5+
fedora.amd64: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-fedora.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Fedora -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/fedora.amd64 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/fedora.amd64 -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/fedora.amd64:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="fedora.amd64" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
ios: native-libs FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(SOURCE_DIR) -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(BUILD_DIR)/dependencies/native-libs/Apple -DNATIVE_LIBRARY_ROOT=$(BUILD_DIR)/dependencies/native-libs -DCOFFEE_ROOT_DIR=$(COFFEE_DIR)/ios -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build/ios -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ios:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/ios"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# iOS simulator build
# Compiler: Clang
ios.x86: native-libs FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(SOURCE_DIR) -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR -DNATIVE_LIBRARY_DIR=$(BUILD_DIR)/dependencies/native-libs/Apple -DNATIVE_LIBRARY_ROOT=$(BUILD_DIR)/dependencies/native-libs -DCOFFEE_ROOT_DIR=$(COFFEE_DIR)/ios.x86 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build/ios.x86 -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ios.x86:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/ios.x86"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# iOS simulator build
# Compiler: Clang
ios.x86_64: native-libs FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(SOURCE_DIR) -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR64 -DNATIVE_LIBRARY_DIR=$(BUILD_DIR)/dependencies/native-libs/Apple -DNATIVE_LIBRARY_ROOT=$(BUILD_DIR)/dependencies/native-libs -DCOFFEE_ROOT_DIR=$(COFFEE_DIR)/ios.x86_64 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build/ios.x86_64 -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ios.x86_64:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/ios.x86_64"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
maemo.armel: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.make8 \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Unix Makefiles' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-maemo.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-maemo-armv7_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Maemo -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/maemo.armel -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/maemo.armel -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DCOFFEE_BUILD_ASSIMP=OFF" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/maemo.armel:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="maemo.armel" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
mingw.w64: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/windows-mingw64.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/windows-mingw64_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/MinGW -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/mingw.w64 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/mingw.w64 -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/mingw.w64:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="mingw.w64" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Apple OS X
# Compiler: Clang
osx: native-libs FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(SOURCE_DIR) -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/osx-generic_osx.toolchain.cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DNATIVE_LIBRARY_DIR=$(BUILD_DIR)/dependencies/native-libs/Apple -DNATIVE_LIBRARY_ROOT=$(BUILD_DIR)/dependencies/native-libs -DCOFFEE_ROOT_DIR=$(COFFEE_DIR)/osx -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build/osx -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/osx:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/osx"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
raspberry.armhf: native-libs rpi-sdk FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-raspberry.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-raspberry-armhf_linux.toolchain.cmake -DRASPBERRY_SDK=/rpi-sysroot -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/RaspberryPi -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/raspberry.armhf -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/raspberry.armhf -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/raspberry.armhf:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="raspberry.armhf" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
steam.amd64: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-steam.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-steam_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/SteamOS -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/steam.amd64 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/steam.amd64 -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/steam.amd64:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="steam.amd64" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DMKSQUASH_PROGRAM=/usr/bin/mksquashfs -DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime -DCOFFEE_GENERATE_APPIMAGE=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ubuntu.amd64:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64.gles2: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64.gles2 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64.gles2 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DMKSQUASH_PROGRAM=/usr/bin/mksquashfs -DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime -DCOFFEE_GENERATE_APPIMAGE=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64.gles3: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64.gles3 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64.gles3 -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DMKSQUASH_PROGRAM=/usr/bin/mksquashfs -DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime -DCOFFEE_GENERATE_APPIMAGE=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.amd64.tools: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.amd64.tools -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.amd64.tools -DSKIP_GRAPHIC_TESTS=$(HEADLESS) -DGENERATE_EXAMPLES=OFF -DGENERATE_PROGRAMS=ON -DGENERATE_TESTS=OFF -DCOFFEE_GENERATE_FLATPAK=OFF -DCOFFEE_GENERATE_SNAPPY=OFF -DCOFFEE_GENERATE_APPIMAGE=ON -DMKSQUASH_PROGRAM=/usr/bin/mksquashfs -DAPPIMAGE_RUNTIME_BINARY=$(NATIVE_LIBRARY_DIR)/Ubuntu/util/x86_64-linux-gnu/runtime -DCOFFEE_GENERATE_APPIMAGE=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ubuntu.amd64.tools:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.i686.gles: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic-i686_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.i686.gles -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.i686.gles -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ubuntu.i686.gles:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
ubuntu.i686.gles2: native-libs FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="$(CMAKE_SOURCE_DIR) -G'Ninja' -C$(CMAKE_SOURCE_DIR)/cmake/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=$(CMAKE_SOURCE_DIR)/cmake/Toolchains/linux-generic-i686_linux.toolchain.cmake -DNATIVE_LIBRARY_DIR=$(NATIVE_LIBRARY_DIR)/Ubuntu -DNATIVE_LIBRARY_ROOT=$(NATIVE_LIBRARY_DIR) -DCOFFEE_ROOT_DIR=$(COFFEE_ROOT_DIR)/ubuntu.i686.gles2 -DGENERATE_PROGRAMS=$(GENERATE_PROGRAMS) -DCOFFEE_BUILD_ASSIMP=ON -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DCMAKE_INSTALL_PREFIX=$(CMAKE_INSTALL_DIR)/ubuntu.i686.gles2 -DSKIP_GRAPHIC_TESTS=$(HEADLESS)" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/nativelibs:ro -v $(SOURCE_DIR):/home/coffee/project:ro -v $(BUILD_DIR)/build:/home/coffee/out:rw -v $(BUILD_DIR)/ubuntu.i686.gles2:/home/coffee/build:rw -v $(COFFEE_DIR):/home/coffee/library:ro --workdir "$(CMAKE_BUILD_DIR)"" \
		-e BUILD_NAME="ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="$(CMAKE_BUILD_DIR)"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/appimg-runtime/source"

appimg-runtime.source: appimg-runtime.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/appimg-runtime/source/.git ] && \
	git clone --depth 1 'https://github.com/AppImage/AppImageKit.git' $(BUILD_DIR)/build-dependencies/appimg-runtime/source || \
	true

assimp.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/assimp/source"

assimp.source: assimp.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/assimp/source/.git ] && \
	git clone --depth 1 'https://github.com/assimp/assimp.git' $(BUILD_DIR)/build-dependencies/assimp/source || \
	true

bullet.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/bullet/source"

bullet.source: bullet.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/bullet/source/.git ] && \
	git clone --depth 1 'https://github.com/bulletphysics/bullet3.git' $(BUILD_DIR)/build-dependencies/bullet/source || \
	true

glslang.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/glslang/source"

glslang.source: glslang.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/glslang/source/.git ] && \
	git clone --depth 1 'https://github.com/KhronosGroup/glslang.git' $(BUILD_DIR)/build-dependencies/glslang/source || \
	true

openal.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/openal/source"

openal.source: openal.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/openal/source/.git ] && \
	git clone --depth 1 'https://github.com/kcat/openal-soft.git' $(BUILD_DIR)/build-dependencies/openal/source || \
	true

sdl2.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/sdl2/source"

sdl2.source: sdl2.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/sdl2/source/.hg ] && \
	hg clone --depth 1 'https://hg.libsdl.org/SDL' $(BUILD_DIR)/build-dependencies/sdl2/source || \
	true

squish.source.mkdir:
	mkdir -p "$(BUILD_DIR)/build-dependencies/squish/source"

squish.source: squish.source.mkdir
	[ ! -d $(BUILD_DIR)/build-dependencies/squish/source/.git ] && \
	git clone --depth 1 'https://github.com/Cavewhere/squish.git' $(BUILD_DIR)/build-dependencies/squish/source || \
	true


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv7a.gingerbread.gles2:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv7a.gingerbread.gles2/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv7a.gingerbread.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.gingerbread.gles2



assimp.android.armv7a.gingerbread.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.gingerbread.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv7a.gingerbread.gles2: assimp.source assimp.android.armv7a.gingerbread.gles2.build_dir assimp.android.armv7a.gingerbread.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-9 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv7a.gingerbread.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.gingerbread.gles2



bullet.android.armv7a.gingerbread.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.gingerbread.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv7a.gingerbread.gles2: bullet.source bullet.android.armv7a.gingerbread.gles2.build_dir bullet.android.armv7a.gingerbread.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-9 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv7a.gingerbread.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.gingerbread.gles2



openal.android.armv7a.gingerbread.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.gingerbread.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv7a.gingerbread.gles2: openal.source openal.android.armv7a.gingerbread.gles2.build_dir openal.android.armv7a.gingerbread.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-9 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv7a.gingerbread.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.gingerbread.gles2



openssl.android.armv7a.gingerbread.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.gingerbread.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv7a.gingerbread.gles2: openssl.source openssl.android.armv7a.gingerbread.gles2.build_dir openssl.android.armv7a.gingerbread.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv7a.gingerbread.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.gingerbread.gles2



sdl2.android.armv7a.gingerbread.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.gingerbread.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv7a.gingerbread.gles2: sdl2.source sdl2.android.armv7a.gingerbread.gles2.build_dir sdl2.android.armv7a.gingerbread.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.gingerbread.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.gingerbread.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv7a.gingerbread.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv7a.kitkat.gles2:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv7a.kitkat.gles2/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv7a.kitkat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.kitkat.gles2



assimp.android.armv7a.kitkat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.kitkat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv7a.kitkat.gles2: assimp.source assimp.android.armv7a.kitkat.gles2.build_dir assimp.android.armv7a.kitkat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv7a.kitkat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.kitkat.gles2



bullet.android.armv7a.kitkat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.kitkat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv7a.kitkat.gles2: bullet.source bullet.android.armv7a.kitkat.gles2.build_dir bullet.android.armv7a.kitkat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv7a.kitkat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.kitkat.gles2



openal.android.armv7a.kitkat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.kitkat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv7a.kitkat.gles2: openal.source openal.android.armv7a.kitkat.gles2.build_dir openal.android.armv7a.kitkat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv7a.kitkat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.kitkat.gles2



openssl.android.armv7a.kitkat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.kitkat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv7a.kitkat.gles2: openssl.source openssl.android.armv7a.kitkat.gles2.build_dir openssl.android.armv7a.kitkat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv7a.kitkat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.kitkat.gles2



sdl2.android.armv7a.kitkat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.kitkat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv7a.kitkat.gles2: sdl2.source sdl2.android.armv7a.kitkat.gles2.build_dir sdl2.android.armv7a.kitkat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.kitkat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.kitkat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv7a.kitkat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv7a.lollipop.gles3:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv7a.lollipop.gles3/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv7a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.lollipop.gles3



assimp.android.armv7a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv7a.lollipop.gles3: assimp.source assimp.android.armv7a.lollipop.gles3.build_dir assimp.android.armv7a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv7a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.lollipop.gles3



bullet.android.armv7a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv7a.lollipop.gles3: bullet.source bullet.android.armv7a.lollipop.gles3.build_dir bullet.android.armv7a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv7a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.lollipop.gles3



openal.android.armv7a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv7a.lollipop.gles3: openal.source openal.android.armv7a.lollipop.gles3.build_dir openal.android.armv7a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv7a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.lollipop.gles3



openssl.android.armv7a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv7a.lollipop.gles3: openssl.source openssl.android.armv7a.lollipop.gles3.build_dir openssl.android.armv7a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv7a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.lollipop.gles3



sdl2.android.armv7a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv7a.lollipop.gles3: sdl2.source sdl2.android.armv7a.lollipop.gles3.build_dir sdl2.android.armv7a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv7a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv7a.nougat.gles2:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv7a.nougat.gles2/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv7a.nougat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles2



assimp.android.armv7a.nougat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv7a.nougat.gles2: assimp.source assimp.android.armv7a.nougat.gles2.build_dir assimp.android.armv7a.nougat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv7a.nougat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.nougat.gles2



bullet.android.armv7a.nougat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.nougat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv7a.nougat.gles2: bullet.source bullet.android.armv7a.nougat.gles2.build_dir bullet.android.armv7a.nougat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv7a.nougat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.nougat.gles2



openal.android.armv7a.nougat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.nougat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv7a.nougat.gles2: openal.source openal.android.armv7a.nougat.gles2.build_dir openal.android.armv7a.nougat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv7a.nougat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.nougat.gles2



openssl.android.armv7a.nougat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.nougat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv7a.nougat.gles2: openssl.source openssl.android.armv7a.nougat.gles2.build_dir openssl.android.armv7a.nougat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv7a.nougat.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.nougat.gles2



sdl2.android.armv7a.nougat.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.nougat.gles2


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv7a.nougat.gles2: sdl2.source sdl2.android.armv7a.nougat.gles2.build_dir sdl2.android.armv7a.nougat.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.nougat.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.nougat.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv7a.nougat.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv7a.nougat.gles3:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv7a.nougat.gles3/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv7a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles3



assimp.android.armv7a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv7a.nougat.gles3: assimp.source assimp.android.armv7a.nougat.gles3.build_dir assimp.android.armv7a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv7a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.nougat.gles3



bullet.android.armv7a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv7a.nougat.gles3: bullet.source bullet.android.armv7a.nougat.gles3.build_dir bullet.android.armv7a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv7a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.nougat.gles3



openal.android.armv7a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv7a.nougat.gles3: openal.source openal.android.armv7a.nougat.gles3.build_dir openal.android.armv7a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='armeabi-v7a with NEON' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv7a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.nougat.gles3



openssl.android.armv7a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv7a.nougat.gles3: openssl.source openssl.android.armv7a.nougat.gles3.build_dir openssl.android.armv7a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv7a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.nougat.gles3



sdl2.android.armv7a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv7a.nougat.gles3: sdl2.source sdl2.android.armv7a.nougat.gles3.build_dir sdl2.android.armv7a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv7a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv7a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv7a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv8a.lollipop.gles3:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv8a.lollipop.gles3/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv8a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.lollipop.gles3



assimp.android.armv8a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv8a.lollipop.gles3: assimp.source assimp.android.armv8a.lollipop.gles3.build_dir assimp.android.armv8a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv8a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv8a.lollipop.gles3



bullet.android.armv8a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv8a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv8a.lollipop.gles3: bullet.source bullet.android.armv8a.lollipop.gles3.build_dir bullet.android.armv8a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv8a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv8a.lollipop.gles3



openal.android.armv8a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv8a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv8a.lollipop.gles3: openal.source openal.android.armv8a.lollipop.gles3.build_dir openal.android.armv8a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-21 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv8a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv8a.lollipop.gles3



openssl.android.armv8a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv8a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv8a.lollipop.gles3: openssl.source openssl.android.armv8a.lollipop.gles3.build_dir openssl.android.armv8a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv8a.lollipop.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv8a.lollipop.gles3



sdl2.android.armv8a.lollipop.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv8a.lollipop.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv8a.lollipop.gles3: sdl2.source sdl2.android.armv8a.lollipop.gles3.build_dir sdl2.android.armv8a.lollipop.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv8a.lollipop.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv8a.lollipop.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv8a.lollipop.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.armv8a.nougat.gles3:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.armv8a.nougat.gles3/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.armv8a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.nougat.gles3



assimp.android.armv8a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.armv8a.nougat.gles3: assimp.source assimp.android.armv8a.nougat.gles3.build_dir assimp.android.armv8a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.armv8a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.armv8a.nougat.gles3



bullet.android.armv8a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.armv8a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.armv8a.nougat.gles3: bullet.source bullet.android.armv8a.nougat.gles3.build_dir bullet.android.armv8a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.armv8a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.armv8a.nougat.gles3



openal.android.armv8a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.armv8a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.armv8a.nougat.gles3: openal.source openal.android.armv8a.nougat.gles3.build_dir openal.android.armv8a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-24 -DANDROID_ABI='arm64-v8a' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.armv8a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.armv8a.nougat.gles3



openssl.android.armv8a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.armv8a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.armv8a.nougat.gles3: openssl.source openssl.android.armv8a.nougat.gles3.build_dir openssl.android.armv8a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.armv8a.nougat.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv8a.nougat.gles3



sdl2.android.armv8a.nougat.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv8a.nougat.gles3


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.armv8a.nougat.gles3: sdl2.source sdl2.android.armv8a.nougat.gles3.build_dir sdl2.android.armv8a.nougat.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.armv8a.nougat.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.armv8a.nougat.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.armv8a.nougat.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.mips.kitkat:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.mips.kitkat/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.mips.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.mips.kitkat



assimp.android.mips.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.mips.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.mips.kitkat: assimp.source assimp.android.mips.kitkat.build_dir assimp.android.mips.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.mips.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.mips.kitkat



bullet.android.mips.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.mips.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.mips.kitkat: bullet.source bullet.android.mips.kitkat.build_dir bullet.android.mips.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.mips.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.mips.kitkat



openal.android.mips.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.mips.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.mips.kitkat: openal.source openal.android.mips.kitkat.build_dir openal.android.mips.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.mips.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.mips.kitkat



openssl.android.mips.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.mips.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.mips.kitkat: openssl.source openssl.android.mips.kitkat.build_dir openssl.android.mips.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.mips.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.mips.kitkat



sdl2.android.mips.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.mips.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.mips.kitkat: sdl2.source sdl2.android.mips.kitkat.build_dir sdl2.android.mips.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.mips.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.mips.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.mips.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.mips64.kitkat:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.mips64.kitkat/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.mips64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.mips64.kitkat



assimp.android.mips64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.mips64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.mips64.kitkat: assimp.source assimp.android.mips64.kitkat.build_dir assimp.android.mips64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.mips64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.mips64.kitkat



bullet.android.mips64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.mips64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.mips64.kitkat: bullet.source bullet.android.mips64.kitkat.build_dir bullet.android.mips64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.mips64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.mips64.kitkat



openal.android.mips64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.mips64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.mips64.kitkat: openal.source openal.android.mips64.kitkat.build_dir openal.android.mips64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='mips64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.mips64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.mips64.kitkat



openssl.android.mips64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.mips64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.mips64.kitkat: openssl.source openssl.android.mips64.kitkat.build_dir openssl.android.mips64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.mips64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.mips64.kitkat



sdl2.android.mips64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.mips64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.mips64.kitkat: sdl2.source sdl2.android.mips64.kitkat.build_dir sdl2.android.mips64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.mips64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.mips64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.mips64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.x86.kitkat:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.x86.kitkat/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.x86.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.x86.kitkat



assimp.android.x86.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.x86.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.x86.kitkat: assimp.source assimp.android.x86.kitkat.build_dir assimp.android.x86.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.x86.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.x86.kitkat



bullet.android.x86.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.x86.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.x86.kitkat: bullet.source bullet.android.x86.kitkat.build_dir bullet.android.x86.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.x86.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.x86.kitkat



openal.android.x86.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.x86.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.x86.kitkat: openal.source openal.android.x86.kitkat.build_dir openal.android.x86.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.x86.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.x86.kitkat



openssl.android.x86.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.x86.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.x86.kitkat: openssl.source openssl.android.x86.kitkat.build_dir openssl.android.x86.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.x86.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.x86.kitkat



sdl2.android.x86.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.x86.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.x86.kitkat: sdl2.source sdl2.android.x86.kitkat.build_dir sdl2.android.x86.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.x86.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.x86.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.x86.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
strip.android.x86_64.kitkat:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/android.x86_64.kitkat/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.android.x86_64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/android.x86_64.kitkat



assimp.android.x86_64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/android.x86_64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
assimp.android.x86_64.kitkat: assimp.source assimp.android.x86_64.kitkat.build_dir assimp.android.x86_64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86_64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.android.x86_64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/android.x86_64.kitkat



bullet.android.x86_64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/android.x86_64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
bullet.android.x86_64.kitkat: bullet.source bullet.android.x86_64.kitkat.build_dir bullet.android.x86_64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86_64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.android.x86_64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/android.x86_64.kitkat



openal.android.x86_64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/android.x86_64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openal.android.x86_64.kitkat: openal.source openal.android.x86_64.kitkat.build_dir openal.android.x86_64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/nothing.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/all-android.toolchain.cmake -DANDROID_NDK=$(ANDROID_NDK_INTERNAL) -DANDROID_SDK=$(ANDROID_SDK_INTERNAL) -DANDROID_TOOLCHAIN=clang -DANDROID_STL=c++_static -DANDROID_PLATFORM=android-19 -DANDROID_ABI='x86_64' -DANDROID_CPP_FEATURES=rtti\;exceptions -DANDROID_ARM_NEON=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.android.x86_64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/android.x86_64.kitkat



openssl.android.x86_64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/android.x86_64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
openssl.android.x86_64.kitkat: openssl.source openssl.android.x86_64.kitkat.build_dir openssl.android.x86_64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.android.x86_64.kitkat.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/android.x86_64.kitkat



sdl2.android.x86_64.kitkat.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/android.x86_64.kitkat


# Android builds, ARMv8-A and ARMv7-A mostly
# Compiler: Clang
sdl2.android.x86_64.kitkat: sdl2.source sdl2.android.x86_64.kitkat.build_dir sdl2.android.x86_64.kitkat.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="android" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/android.x86_64.kitkat:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/android.x86_64.kitkat:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.android.x86_64.kitkat" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.coverage.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/coverage



appimg-runtime.coverage.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/coverage


# Coverage build using same config as Ubuntu
# Compiler: Clang
appimg-runtime.coverage: appimg-runtime.source appimg-runtime.coverage.build_dir appimg-runtime.coverage.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/coverage:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Coverage build using same config as Ubuntu
# Compiler: Clang
strip.coverage:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/build-dependencies/assimp/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/coverage/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.coverage.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/coverage



assimp.coverage.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/coverage


# Coverage build using same config as Ubuntu
# Compiler: Clang
assimp.coverage: assimp.source assimp.coverage.build_dir assimp.coverage.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-coverage.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/build-dependencies/assimp/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.coverage.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/coverage



bullet.coverage.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/coverage


# Coverage build using same config as Ubuntu
# Compiler: Clang
bullet.coverage: bullet.source bullet.coverage.build_dir bullet.coverage.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-coverage.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/build-dependencies/bullet/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.coverage.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/coverage



openal.coverage.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/coverage


# Coverage build using same config as Ubuntu
# Compiler: Clang
openal.coverage: openal.source openal.coverage.build_dir openal.coverage.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-coverage.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/build-dependencies/openal/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.coverage.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/coverage



openssl.coverage.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/coverage


# Coverage build using same config as Ubuntu
# Compiler: Clang
openssl.coverage: openssl.source openssl.coverage.build_dir openssl.coverage.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/build-dependencies/openssl/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.coverage.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/coverage



sdl2.coverage.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/coverage


# Coverage build using same config as Ubuntu
# Compiler: Clang
sdl2.coverage: sdl2.source sdl2.coverage.build_dir sdl2.coverage.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-e CC= -e CXX= -v $(BUILD_DIR)/build-dependencies/sdl2/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/coverage:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/coverage:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.coverage" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
strip.emscripten.asmjs:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/emscripten.asmjs/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.emscripten.asmjs.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.asmjs



assimp.emscripten.asmjs.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.asmjs


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
assimp.emscripten.asmjs: assimp.source assimp.emscripten.asmjs.build_dir assimp.emscripten.asmjs.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/js-emscripten.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.emscripten.asmjs.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/emscripten.asmjs



bullet.emscripten.asmjs.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/emscripten.asmjs


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
bullet.emscripten.asmjs: bullet.source bullet.emscripten.asmjs.build_dir bullet.emscripten.asmjs.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/js-emscripten.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/bullet/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.emscripten.asmjs.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/emscripten.asmjs



openal.emscripten.asmjs.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/emscripten.asmjs


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
openal.emscripten.asmjs: openal.source openal.emscripten.asmjs.build_dir openal.emscripten.asmjs.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/js-emscripten.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/openal/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.emscripten.asmjs.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/emscripten.asmjs



openssl.emscripten.asmjs.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/emscripten.asmjs


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
openssl.emscripten.asmjs: openssl.source openssl.emscripten.asmjs.build_dir openssl.emscripten.asmjs.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/openssl/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.emscripten.asmjs.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/emscripten.asmjs



sdl2.emscripten.asmjs.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/emscripten.asmjs


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
sdl2.emscripten.asmjs: sdl2.source sdl2.emscripten.asmjs.build_dir sdl2.emscripten.asmjs.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/sdl2/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/emscripten.asmjs:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/emscripten.asmjs:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.emscripten.asmjs" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
strip.emscripten.wasm:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.emscripten.wasm" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/emscripten.wasm/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.emscripten.wasm.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.wasm



assimp.emscripten.wasm.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.wasm


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
assimp.emscripten.wasm: assimp.source assimp.emscripten.wasm.build_dir assimp.emscripten.wasm.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/js-emscripten-wasm.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.emscripten.wasm" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.emscripten.wasm.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/emscripten.wasm



bullet.emscripten.wasm.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/emscripten.wasm


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
bullet.emscripten.wasm: bullet.source bullet.emscripten.wasm.build_dir bullet.emscripten.wasm.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/js-emscripten-wasm.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/bullet/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.emscripten.wasm" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.emscripten.wasm.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/emscripten.wasm



openal.emscripten.wasm.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/emscripten.wasm


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
openal.emscripten.wasm: openal.source openal.emscripten.wasm.build_dir openal.emscripten.wasm.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/js-emscripten-wasm.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/js-emscripten.toolchain.cmake -DEMSCRIPTEN_ROOT_PATH=/home/coffee/emsdk_portable/emscripten/master -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/openal/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.emscripten.wasm" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.emscripten.wasm.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/emscripten.wasm



openssl.emscripten.wasm.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/emscripten.wasm


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
openssl.emscripten.wasm: openssl.source openssl.emscripten.wasm.build_dir openssl.emscripten.wasm.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/openssl/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.emscripten.wasm" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.emscripten.wasm.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/emscripten.wasm



sdl2.emscripten.wasm.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/emscripten.wasm


# Emscripten with WebAsm and asm.js
# Compiler: Clang 4+
sdl2.emscripten.wasm: sdl2.source sdl2.emscripten.wasm.build_dir sdl2.emscripten.wasm.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="emscripten" \
		-e DOCKER_EXTRA_OPTIONS="-e EMSCRIPTEN=/home/coffee/emsdk_portable/emscripten/master -v $(BUILD_DIR)/build-dependencies/sdl2/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/emscripten.wasm:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/emscripten.wasm:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.emscripten.wasm" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.fedora.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/fedora.amd64



appimg-runtime.fedora.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/fedora.amd64


# Fedora build in a Fedora Docker
# Compiler: GCC 5+
appimg-runtime.fedora.amd64: appimg-runtime.source appimg-runtime.fedora.amd64.build_dir appimg-runtime.fedora.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/fedora.amd64:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Fedora build in a Fedora Docker
# Compiler: GCC 5+
strip.fedora.amd64:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/fedora.amd64/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.fedora.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/fedora.amd64



assimp.fedora.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/fedora.amd64


# Fedora build in a Fedora Docker
# Compiler: GCC 5+
assimp.fedora.amd64: assimp.source assimp.fedora.amd64.build_dir assimp.fedora.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-fedora.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.fedora.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/fedora.amd64



bullet.fedora.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/fedora.amd64


# Fedora build in a Fedora Docker
# Compiler: GCC 5+
bullet.fedora.amd64: bullet.source bullet.fedora.amd64.build_dir bullet.fedora.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-fedora.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.fedora.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/fedora.amd64



openal.fedora.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/fedora.amd64


# Fedora build in a Fedora Docker
# Compiler: GCC 5+
openal.fedora.amd64: openal.source openal.fedora.amd64.build_dir openal.fedora.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-fedora.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.fedora.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/fedora.amd64



openssl.fedora.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/fedora.amd64


# Fedora build in a Fedora Docker
# Compiler: GCC 5+
openssl.fedora.amd64: openssl.source openssl.fedora.amd64.build_dir openssl.fedora.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.fedora.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/fedora.amd64



sdl2.fedora.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/fedora.amd64


# Fedora build in a Fedora Docker
# Compiler: GCC 5+
sdl2.fedora.amd64: sdl2.source sdl2.fedora.amd64.build_dir sdl2.fedora.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="fedora" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/fedora.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/fedora.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.fedora.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
strip.ios:  FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/ios"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ios/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ios.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ios



assimp.ios.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ios


# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
assimp.ios: assimp.source assimp.ios.build_dir assimp.ios.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/assimp/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/ios -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/ios -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/ios"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ios.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ios



bullet.ios.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ios


# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
bullet.ios: bullet.source bullet.ios.build_dir bullet.ios.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/bullet/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/ios -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/ios -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/bullet/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/bullet/build/ios"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ios.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ios



openal.ios.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ios


# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
openal.ios: openal.source openal.ios.build_dir openal.ios.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/openal/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/ios -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/ios -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openal/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openal/build/ios"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ios.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ios



openssl.ios.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ios


# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
openssl.ios: openssl.source openssl.ios.build_dir openssl.ios.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openssl/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openssl/build/ios"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ios.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ios



sdl2.ios.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ios


# Device-oriented build for ARM64 and ARMv7-A
# Compiler: Clang
sdl2.ios: sdl2.source sdl2.ios.build_dir sdl2.ios.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/sdl2/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ios:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ios:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ios" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/sdl2/build/ios"\
		-e CUSTOM_COMMAND="sh -c ' cd $(BUILD_DIR)/build-dependencies/sdl2/build/ios && $(BUILD_DIR)/build-dependencies/sdl2/source/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=$(BUILD_DIR)/build-dependencies/sdl2/install/ios && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# iOS simulator build
# Compiler: Clang
strip.ios.x86:  FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/ios.x86"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ios.x86/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ios.x86.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86



assimp.ios.x86.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86


# iOS simulator build
# Compiler: Clang
assimp.ios.x86: assimp.source assimp.ios.x86.build_dir assimp.ios.x86.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/assimp/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/ios.x86 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/ios.x86 -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/ios.x86"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ios.x86.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ios.x86



bullet.ios.x86.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ios.x86


# iOS simulator build
# Compiler: Clang
bullet.ios.x86: bullet.source bullet.ios.x86.build_dir bullet.ios.x86.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/bullet/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/ios.x86 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/ios.x86 -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/bullet/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/bullet/build/ios.x86"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ios.x86.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ios.x86



openal.ios.x86.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ios.x86


# iOS simulator build
# Compiler: Clang
openal.ios.x86: openal.source openal.ios.x86.build_dir openal.ios.x86.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/openal/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/ios.x86 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/ios.x86 -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openal/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openal/build/ios.x86"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ios.x86.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ios.x86



openssl.ios.x86.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ios.x86


# iOS simulator build
# Compiler: Clang
openssl.ios.x86: openssl.source openssl.ios.x86.build_dir openssl.ios.x86.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openssl/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openssl/build/ios.x86"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ios.x86.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86



sdl2.ios.x86.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86


# iOS simulator build
# Compiler: Clang
sdl2.ios.x86: sdl2.source sdl2.ios.x86.build_dir sdl2.ios.x86.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ios.x86" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86"\
		-e CUSTOM_COMMAND="sh -c ' cd $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86 && $(BUILD_DIR)/build-dependencies/sdl2/source/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=$(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86 && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# iOS simulator build
# Compiler: Clang
strip.ios.x86_64:  FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ios.x86_64/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ios.x86_64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64



assimp.ios.x86_64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64


# iOS simulator build
# Compiler: Clang
assimp.ios.x86_64: assimp.source assimp.ios.x86_64.build_dir assimp.ios.x86_64.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/assimp/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64 -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/ios.x86_64"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ios.x86_64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ios.x86_64



bullet.ios.x86_64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ios.x86_64


# iOS simulator build
# Compiler: Clang
bullet.ios.x86_64: bullet.source bullet.ios.x86_64.build_dir bullet.ios.x86_64.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/bullet/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/ios.x86_64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/ios.x86_64 -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/bullet/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/bullet/build/ios.x86_64"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ios.x86_64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ios.x86_64



openal.ios.x86_64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ios.x86_64


# iOS simulator build
# Compiler: Clang
openal.ios.x86_64: openal.source openal.ios.x86_64.build_dir openal.ios.x86_64.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/openal/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-ios.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/all-ios.toolchain.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/ios.x86_64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/ios.x86_64 -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openal/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openal/build/ios.x86_64"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ios.x86_64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ios.x86_64



openssl.ios.x86_64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ios.x86_64


# iOS simulator build
# Compiler: Clang
openssl.ios.x86_64: openssl.source openssl.ios.x86_64.build_dir openssl.ios.x86_64.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openssl/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openssl/build/ios.x86_64"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ios.x86_64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86_64



sdl2.ios.x86_64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86_64


# iOS simulator build
# Compiler: Clang
sdl2.ios.x86_64: sdl2.source sdl2.ios.x86_64.build_dir sdl2.ios.x86_64.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86_64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86_64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ios.x86_64" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86_64"\
		-e CUSTOM_COMMAND="sh -c ' cd $(BUILD_DIR)/build-dependencies/sdl2/build/ios.x86_64 && $(BUILD_DIR)/build-dependencies/sdl2/source/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=$(BUILD_DIR)/build-dependencies/sdl2/install/ios.x86_64 && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.maemo.armel.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/maemo.armel



appimg-runtime.maemo.armel.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/maemo.armel


# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
appimg-runtime.maemo.armel: appimg-runtime.source appimg-runtime.maemo.armel.build_dir appimg-runtime.maemo.armel.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/maemo.armel:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
strip.maemo.armel:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/strip.maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/maemo.armel/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.maemo.armel.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/maemo.armel



assimp.maemo.armel.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/maemo.armel


# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
assimp.maemo.armel: assimp.source assimp.maemo.armel.build_dir assimp.maemo.armel.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.make8 \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/linux-maemo.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-maemo-armv7_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/assimp.maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.maemo.armel.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/maemo.armel



bullet.maemo.armel.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/maemo.armel


# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
bullet.maemo.armel: bullet.source bullet.maemo.armel.build_dir bullet.maemo.armel.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.make8 \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/linux-maemo.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-maemo-armv7_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/bullet.maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.maemo.armel.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/maemo.armel



openal.maemo.armel.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/maemo.armel


# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
openal.maemo.armel: openal.source openal.maemo.armel.build_dir openal.maemo.armel.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.make8 \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Unix Makefiles' -C/home/coffee/cmake-project/Preload/linux-maemo.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-maemo-armv7_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/openal.maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.maemo.armel.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/maemo.armel



openssl.maemo.armel.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/maemo.armel


# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
openssl.maemo.armel: openssl.source openssl.maemo.armel.build_dir openssl.maemo.armel.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi.make8 \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/openssl.maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.maemo.armel.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/maemo.armel



sdl2.maemo.armel.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/maemo.armel


# Maemo 5 builds, performed within a Maemo 5 armel chroot
# Compiler: GCC 6
sdl2.maemo.armel: sdl2.source sdl2.maemo.armel.build_dir sdl2.maemo.armel.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONTAINER="hbirch/maemo-builder:v3" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/native-libs:/maemo//nativelibs:ro -v $(COFFEE_DIR):/maemo//home/coffee/library:ro -v $(SOURCE_DIR):/maemo//home/coffee/project:ro -v $(BUILD_DIR)/build:/maemo//home/coffee/out:rw -v $(BUILD_DIR)/sdl2.maemo.armel:/maemo//home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/maemo.armel:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/maemo.armel:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.maemo.armel" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
strip.mingw.w64:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.mingw.w64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/mingw.w64/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.mingw.w64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/mingw.w64



assimp.mingw.w64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/mingw.w64


# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
assimp.mingw.w64: assimp.source assimp.mingw.w64.build_dir assimp.mingw.w64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/windows-mingw64.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/windows-mingw64_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.mingw.w64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.mingw.w64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/mingw.w64



bullet.mingw.w64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/mingw.w64


# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
bullet.mingw.w64: bullet.source bullet.mingw.w64.build_dir bullet.mingw.w64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/windows-mingw64.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/windows-mingw64_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.mingw.w64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.mingw.w64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/mingw.w64



openal.mingw.w64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/mingw.w64


# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
openal.mingw.w64: openal.source openal.mingw.w64.build_dir openal.mingw.w64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/windows-mingw64.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/windows-mingw64_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.mingw.w64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.mingw.w64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/mingw.w64



openssl.mingw.w64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/mingw.w64


# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
openssl.mingw.w64: openssl.source openssl.mingw.w64.build_dir openssl.mingw.w64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.mingw.w64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.mingw.w64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/mingw.w64



sdl2.mingw.w64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/mingw.w64


# MinGW64 environment in Ubuntu Docker
# Compiler: GCC 5+
sdl2.mingw.w64: sdl2.source sdl2.mingw.w64.build_dir sdl2.mingw.w64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="mingw64" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/mingw.w64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/mingw.w64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.mingw.w64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Apple OS X
# Compiler: Clang
strip.osx:  FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/osx"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/osx/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/osx



assimp.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/osx


# Apple OS X
# Compiler: Clang
assimp.osx: assimp.source assimp.osx.build_dir assimp.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/assimp/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/osx-generic_osx.toolchain.cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/osx -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/assimp/install/osx -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/assimp/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/assimp/build/osx"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/osx



bullet.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/osx


# Apple OS X
# Compiler: Clang
bullet.osx: bullet.source bullet.osx.build_dir bullet.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/bullet/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/osx-generic_osx.toolchain.cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/osx -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/bullet/install/osx -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/bullet/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/bullet/build/osx"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/osx



glslang.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/osx


# Apple OS X
# Compiler: Clang
glslang.osx: glslang.source glslang.osx.build_dir glslang.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/glslang/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/osx-generic_osx.toolchain.cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/glslang/install/osx -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/glslang/install/osx -DBUILD_TESTING=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/glslang/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/glslang/build/osx"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/osx



openal.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/osx


# Apple OS X
# Compiler: Clang
openal.osx: openal.source openal.osx.build_dir openal.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="$(BUILD_DIR)/build-dependencies/openal/source -G'Xcode' -C$(SOURCE_DIR)/cmake/Preload/osx-generic.cmake -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)/cmake/Toolchains/osx-generic_osx.toolchain.cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/osx -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(BUILD_DIR)/build-dependencies/openal/install/osx -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openal/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openal/build/osx"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/osx



openssl.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/osx


# Apple OS X
# Compiler: Clang
openssl.osx: openssl.source openssl.osx.build_dir openssl.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base build \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/openssl/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/openssl/build/osx"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/osx



sdl2.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/osx


# Apple OS X
# Compiler: Clang
sdl2.osx: sdl2.source sdl2.osx.build_dir sdl2.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="None -v $(BUILD_DIR)/build-dependencies/sdl2/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/osx:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/osx:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/sdl2/build/osx"\
		-e CUSTOM_COMMAND="sh -c ' cd $(BUILD_DIR)/build-dependencies/sdl2/build/osx && $(BUILD_DIR)/build-dependencies/sdl2/source/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=$(BUILD_DIR)/build-dependencies/sdl2/install/osx && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.osx.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/osx



squish.osx.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/osx


# Apple OS X
# Compiler: Clang
squish.osx: squish.source squish.osx.build_dir squish.osx.install_dir FORCE
	@make -f $(ROOT_DIR)/Makefile.mac-base custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/osx:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.osx" \
		-e CMAKE_BUILD_DIR="$(BUILD_DIR)/build-dependencies/squish/build/osx"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.raspberry.armhf.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/raspberry.armhf



appimg-runtime.raspberry.armhf.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/raspberry.armhf


# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
appimg-runtime.raspberry.armhf: appimg-runtime.source appimg-runtime.raspberry.armhf.build_dir appimg-runtime.raspberry.armhf.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/raspberry.armhf:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
strip.raspberry.armhf:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/build-dependencies/assimp/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/raspberry.armhf/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.raspberry.armhf.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/raspberry.armhf



assimp.raspberry.armhf.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/raspberry.armhf


# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
assimp.raspberry.armhf: assimp.source assimp.raspberry.armhf.build_dir assimp.raspberry.armhf.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-raspberry.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-raspberry-armhf_linux.toolchain.cmake -DRASPBERRY_SDK=/rpi-sysroot -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/build-dependencies/assimp/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.raspberry.armhf.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/raspberry.armhf



bullet.raspberry.armhf.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/raspberry.armhf


# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
bullet.raspberry.armhf: bullet.source bullet.raspberry.armhf.build_dir bullet.raspberry.armhf.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-raspberry.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-raspberry-armhf_linux.toolchain.cmake -DRASPBERRY_SDK=/rpi-sysroot -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/build-dependencies/bullet/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.raspberry.armhf.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/raspberry.armhf



openal.raspberry.armhf.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/raspberry.armhf


# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
openal.raspberry.armhf: openal.source openal.raspberry.armhf.build_dir openal.raspberry.armhf.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-raspberry.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-raspberry-armhf_linux.toolchain.cmake -DRASPBERRY_SDK=/rpi-sysroot -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/build-dependencies/openal/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.raspberry.armhf.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/raspberry.armhf



openssl.raspberry.armhf.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/raspberry.armhf


# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
openssl.raspberry.armhf: openssl.source openssl.raspberry.armhf.build_dir openssl.raspberry.armhf.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/build-dependencies/openssl/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.raspberry.armhf.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/raspberry.armhf



sdl2.raspberry.armhf.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/raspberry.armhf


# Raspberry Pi ARMv6 build
# Compiler: GCC 4.9
sdl2.raspberry.armhf: sdl2.source sdl2.raspberry.armhf.build_dir sdl2.raspberry.armhf.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="raspberry" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/dependencies/raspberry-sysroot/architectures/rpi-SDL2-X11-armv6:/rpi-sysroot:ro -v $(BUILD_DIR)/build-dependencies/sdl2/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/raspberry.armhf:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/raspberry.armhf:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.raspberry.armhf" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
strip.steam.amd64:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.steam.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/steam.amd64/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.steam.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/steam.amd64



assimp.steam.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/steam.amd64


# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
assimp.steam.amd64: assimp.source assimp.steam.amd64.build_dir assimp.steam.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-steam.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-steam_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.steam.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.steam.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/steam.amd64



bullet.steam.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/steam.amd64


# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
bullet.steam.amd64: bullet.source bullet.steam.amd64.build_dir bullet.steam.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-steam.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-steam_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.steam.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.steam.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/steam.amd64



openal.steam.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/steam.amd64


# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
openal.steam.amd64: openal.source openal.steam.amd64.build_dir openal.steam.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-steam.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-steam_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.steam.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.steam.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/steam.amd64



openssl.steam.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/steam.amd64


# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
openssl.steam.amd64: openssl.source openssl.steam.amd64.build_dir openssl.steam.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.steam.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.steam.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/steam.amd64



sdl2.steam.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/steam.amd64


# Build against the SteamRT SDK
# Compiler: GCC 4.8.4
sdl2.steam.amd64: sdl2.source sdl2.steam.amd64.build_dir sdl2.steam.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="steam" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/steam.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/steam.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.steam.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/ubuntu.amd64



appimg-runtime.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
appimg-runtime.ubuntu.amd64: appimg-runtime.source appimg-runtime.ubuntu.amd64.build_dir appimg-runtime.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
strip.ubuntu.amd64:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ubuntu.amd64/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64



assimp.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
assimp.ubuntu.amd64: assimp.source assimp.ubuntu.amd64.build_dir assimp.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64



bullet.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
bullet.ubuntu.amd64: bullet.source bullet.ubuntu.amd64.build_dir bullet.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64



glslang.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
glslang.ubuntu.amd64: glslang.source glslang.ubuntu.amd64.build_dir glslang.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64



openal.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openal.ubuntu.amd64: openal.source openal.ubuntu.amd64.build_dir openal.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64



openssl.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openssl.ubuntu.amd64: openssl.source openssl.ubuntu.amd64.build_dir openssl.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64



sdl2.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
sdl2.ubuntu.amd64: sdl2.source sdl2.ubuntu.amd64.build_dir sdl2.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.ubuntu.amd64.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/ubuntu.amd64



squish.ubuntu.amd64.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
squish.ubuntu.amd64: squish.source squish.ubuntu.amd64.build_dir squish.ubuntu.amd64.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.ubuntu.amd64" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/ubuntu.amd64.gles2



appimg-runtime.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
appimg-runtime.ubuntu.amd64.gles2: appimg-runtime.source appimg-runtime.ubuntu.amd64.gles2.build_dir appimg-runtime.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64.gles2:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
strip.ubuntu.amd64.gles2:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ubuntu.amd64.gles2/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles2



assimp.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
assimp.ubuntu.amd64.gles2: assimp.source assimp.ubuntu.amd64.gles2.build_dir assimp.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.gles2



bullet.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
bullet.ubuntu.amd64.gles2: bullet.source bullet.ubuntu.amd64.gles2.build_dir bullet.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.gles2



glslang.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
glslang.ubuntu.amd64.gles2: glslang.source glslang.ubuntu.amd64.gles2.build_dir glslang.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.gles2



openal.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openal.ubuntu.amd64.gles2: openal.source openal.ubuntu.amd64.gles2.build_dir openal.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64.gles2



openssl.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openssl.ubuntu.amd64.gles2: openssl.source openssl.ubuntu.amd64.gles2.build_dir openssl.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.gles2



sdl2.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
sdl2.ubuntu.amd64.gles2: sdl2.source sdl2.ubuntu.amd64.gles2.build_dir sdl2.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.ubuntu.amd64.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/ubuntu.amd64.gles2



squish.ubuntu.amd64.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
squish.ubuntu.amd64.gles2: squish.source squish.ubuntu.amd64.gles2.build_dir squish.ubuntu.amd64.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64.gles2:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.ubuntu.amd64.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/ubuntu.amd64.gles3



appimg-runtime.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
appimg-runtime.ubuntu.amd64.gles3: appimg-runtime.source appimg-runtime.ubuntu.amd64.gles3.build_dir appimg-runtime.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64.gles3:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
strip.ubuntu.amd64.gles3:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ubuntu.amd64.gles3/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles3



assimp.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
assimp.ubuntu.amd64.gles3: assimp.source assimp.ubuntu.amd64.gles3.build_dir assimp.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.gles3



bullet.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
bullet.ubuntu.amd64.gles3: bullet.source bullet.ubuntu.amd64.gles3.build_dir bullet.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.gles3



glslang.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
glslang.ubuntu.amd64.gles3: glslang.source glslang.ubuntu.amd64.gles3.build_dir glslang.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.gles3



openal.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openal.ubuntu.amd64.gles3: openal.source openal.ubuntu.amd64.gles3.build_dir openal.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64.gles3



openssl.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openssl.ubuntu.amd64.gles3: openssl.source openssl.ubuntu.amd64.gles3.build_dir openssl.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.gles3



sdl2.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
sdl2.ubuntu.amd64.gles3: sdl2.source sdl2.ubuntu.amd64.gles3.build_dir sdl2.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.gles3:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.gles3:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.ubuntu.amd64.gles3.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/ubuntu.amd64.gles3



squish.ubuntu.amd64.gles3.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64.gles3


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
squish.ubuntu.amd64.gles3: squish.source squish.ubuntu.amd64.gles3.build_dir squish.ubuntu.amd64.gles3.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64.gles3:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.ubuntu.amd64.gles3" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/ubuntu.amd64.tools



appimg-runtime.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
appimg-runtime.ubuntu.amd64.tools: appimg-runtime.source appimg-runtime.ubuntu.amd64.tools.build_dir appimg-runtime.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.amd64.tools:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
strip.ubuntu.amd64.tools:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ubuntu.amd64.tools/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.tools



assimp.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
assimp.ubuntu.amd64.tools: assimp.source assimp.ubuntu.amd64.tools.build_dir assimp.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.tools



bullet.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
bullet.ubuntu.amd64.tools: bullet.source bullet.ubuntu.amd64.tools.build_dir bullet.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.tools



glslang.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
glslang.ubuntu.amd64.tools: glslang.source glslang.ubuntu.amd64.tools.build_dir glslang.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.tools



openal.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openal.ubuntu.amd64.tools: openal.source openal.ubuntu.amd64.tools.build_dir openal.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-generic.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64.tools



openssl.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openssl.ubuntu.amd64.tools: openssl.source openssl.ubuntu.amd64.tools.build_dir openssl.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.tools



sdl2.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
sdl2.ubuntu.amd64.tools: sdl2.source sdl2.ubuntu.amd64.tools.build_dir sdl2.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.amd64.tools:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.amd64.tools:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.ubuntu.amd64.tools.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/ubuntu.amd64.tools



squish.ubuntu.amd64.tools.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64.tools


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
squish.ubuntu.amd64.tools: squish.source squish.ubuntu.amd64.tools.build_dir squish.ubuntu.amd64.tools.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.amd64.tools:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.ubuntu.amd64.tools" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/ubuntu.i686.gles



appimg-runtime.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
appimg-runtime.ubuntu.i686.gles: appimg-runtime.source appimg-runtime.ubuntu.i686.gles.build_dir appimg-runtime.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.i686.gles:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
strip.ubuntu.i686.gles:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ubuntu.i686.gles/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles



assimp.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
assimp.ubuntu.i686.gles: assimp.source assimp.ubuntu.i686.gles.build_dir assimp.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.i686.gles



bullet.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
bullet.ubuntu.i686.gles: bullet.source bullet.ubuntu.i686.gles.build_dir bullet.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.i686.gles



glslang.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
glslang.ubuntu.i686.gles: glslang.source glslang.ubuntu.i686.gles.build_dir glslang.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.i686.gles



openal.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openal.ubuntu.i686.gles: openal.source openal.ubuntu.i686.gles.build_dir openal.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.i686.gles



openssl.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openssl.ubuntu.i686.gles: openssl.source openssl.ubuntu.i686.gles.build_dir openssl.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.i686.gles



sdl2.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
sdl2.ubuntu.i686.gles: sdl2.source sdl2.ubuntu.i686.gles.build_dir sdl2.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.i686.gles:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.i686.gles:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.ubuntu.i686.gles.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/ubuntu.i686.gles



squish.ubuntu.i686.gles.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.i686.gles


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
squish.ubuntu.i686.gles: squish.source squish.ubuntu.i686.gles.build_dir squish.ubuntu.i686.gles.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.i686.gles:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.ubuntu.i686.gles" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


appimg-runtime.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/build/ubuntu.i686.gles2



appimg-runtime.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
appimg-runtime.ubuntu.i686.gles2: appimg-runtime.source appimg-runtime.ubuntu.i686.gles2.build_dir appimg-runtime.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/appimg-runtime/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/appimg-runtime/install/ubuntu.i686.gles2:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="appimg-runtime.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
strip.ubuntu.i686.gles2:  FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies:/target-defs:rw" \
		-e BUILD_NAME="strip.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c '\`cmake -LA /home/coffee/project | grep CMAKE_STRIP | cut -d= -f2\` -g /target-defs/*/install/ubuntu.i686.gles2/lib/*.a'"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


assimp.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles2



assimp.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
assimp.ubuntu.i686.gles2: assimp.source assimp.ubuntu.i686.gles2.build_dir assimp.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=OFF -DASSIMP_BUILD_BLEND_IMPORTER=ON -DASSIMP_BUILD_FBX_IMPORTER=ON -DASSIMP_BUILD_COLLADA_IMPORTER=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/assimp/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/assimp/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/assimp/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="assimp.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


bullet.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.i686.gles2



bullet.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
bullet.ubuntu.i686.gles2: bullet.source bullet.ubuntu.i686.gles2.build_dir bullet.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_BULLET2_DEMOS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_EXTRAS=OFF -DUSE_GRAPHICAL_BENCHMARK=OFF -DINSTALL_LIBS=ON" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/bullet/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/bullet/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/bullet/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="bullet.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


glslang.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.i686.gles2



glslang.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
glslang.ubuntu.i686.gles2: glslang.source glslang.ubuntu.i686.gles2.build_dir glslang.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DBUILD_TESTING=OFF" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/glslang/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/glslang/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/glslang/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="glslang.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openal.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.i686.gles2



openal.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openal.ubuntu.i686.gles2: openal.source openal.ubuntu.i686.gles2.build_dir openal.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="/home/coffee/project -G'Ninja' -C/home/coffee/cmake-project/Preload/linux-gles20.cmake -DCMAKE_TOOLCHAIN_FILE=/home/coffee/cmake-project/Toolchains/linux-generic-i686_linux.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/home/coffee/out -DALSOFT_EXAMPLES=OFF -DALSOFT_TESTS=OFF -DALSOFT_UTILS=OFF" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/openal/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openal/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openal/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openal.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


openssl.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.i686.gles2



openssl.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
openssl.ubuntu.i686.gles2: openssl.source openssl.ubuntu.i686.gles2.build_dir openssl.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) multi \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/openssl/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/openssl/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/openssl/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="openssl.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


sdl2.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.i686.gles2



sdl2.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
sdl2.ubuntu.i686.gles2: sdl2.source sdl2.ubuntu.i686.gles2.build_dir sdl2.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build -v $(BUILD_DIR)/build-dependencies/sdl2/build/ubuntu.i686.gles2:/home/coffee/build:rw -v $(BUILD_DIR)/build-dependencies/sdl2/source:/home/coffee/project:ro -v $(BUILD_DIR)/build-dependencies/sdl2/install/ubuntu.i686.gles2:/home/coffee/out:rw -v $(SOURCE_DIR)/cmake:/home/coffee/cmake-project:ro --workdir /home/coffee/build" \
		-e BUILD_NAME="sdl2.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' cd /home/coffee/build && /home/coffee/project/configure --disable-shared --disable-atomic --disable-filesystem --disable-threads --disable-timers --disable-audio --disable-loadso --disable-cpuinfo --disable-video-vulkan --prefix=/home/coffee/out && make -j4 && make install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"


squish.ubuntu.i686.gles2.build_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/build/ubuntu.i686.gles2



squish.ubuntu.i686.gles2.install_dir:
	mkdir -p $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.i686.gles2


# Ubuntu build in a Ubuntu Docker
# Compiler: GCC 5+
squish.ubuntu.i686.gles2: squish.source squish.ubuntu.i686.gles2.build_dir squish.ubuntu.i686.gles2.install_dir FORCE
	@make -f $(ROOT_DIR)/$(RUNNER) custom \
		-e EXTRA_OPTIONS="" \
		-e DOCKER_CONFIG="ubuntu-i686" \
		-e DOCKER_EXTRA_OPTIONS="-v $(BUILD_DIR)/build-dependencies/squish/source:/home/coffee/project:rw -v $(BUILD_DIR)/build-dependencies/squish/install/ubuntu.i686.gles2:/home/coffee/out:rw --workdir /home/coffee/project" \
		-e BUILD_NAME="squish.ubuntu.i686.gles2" \
		-e CMAKE_BUILD_DIR="/home/coffee/build"\
		-e CUSTOM_COMMAND="sh -c ' mkdir -p /home/coffee/out/include /home/coffee/out/lib && make -f /home/coffee/project/Makefile -e INSTALL_DIR=/home/coffee/out install '"\
		-e OUTPUT_DIR="$(BUILD_DIR)"

