#!/bin/bash

# Base directories
PROJECT_DIR="$HOME/project"
BUILD_DIR_="$HOME/android-build"
BUILD_DIR_64="$HOME/android-build-64"

ARCHITECTURES[0]="armeabi-v7a"
ARCHITECTURES[1]="armeabi-v7a with VFPV3"
ARCHITECTURES[2]="armeabi-v7a with NEON"
ARCHITECTURES[3]="arm64-v8a"
ARCHITECTURES[4]="x86"
ARCHITECTURES[5]="x86_64"

BUILD_DIR_PREFIX="${HOME}/android-build"
LIBRARY_PREFIX="${HOME}/libs/lib"
INCLUDE_PREFIX="$HOME/libs/include"

# SDL2 static library
SDL2_INCLUDE_DIR="${INCLUDE_PREFIX}"
SDL2_LIBRARY_FILE_SO="libSDL2.a"

# OpenAL, typically sourced from https://github.com/AerialX/openal-soft-android
AL_INCLUDE_DIR="${INCLUDE_PREFIX}"
AL_LIBRARY_FILE_SO="libopenal.so"

# We are using a custom toolchain made for Android,
#  sourced from https://github.com/taka-no-me/android-cmake
ANDROID_TOOLCHAIN_FILE="$PROJECT_DIR/cmake/Toolchains/android.toolchain.cmake"
# This is the only reasonable STL implementation that works with C++11 features.
# The others are dead to me.
ANDROID_STL_IMPL="gnustl_static"

# Set up targets
for arch in ${ARCHITECTURES[@]}
do
    ANDROID_ABI[${arch}]="${arch}"
    ANDROID_TARGET[${arch}]="19"
    ANDROID_LIB_ARCH[${arch}]="${arch}"
done

ANDROID_LIB_ARCH[1]="armeabi-v7a"
ANDROID_LIB_ARCH[2]="armeabi-v7a"

# API level 19 works with all Android version past and current.
# arm64-v8a requires API level 21
ANDROID_TARGET[3]="21"

# Find zipalign for Android packaging
ZIPALIGN_UTIL="$(find ~/android-sdk-linux/ -name zipalign|sed -n 1p)"
